{"version":3,"file":"static/chunks/pages/sign-in-ea895befe3c98f34.js","mappings":"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","sources":["webpack://_N_E/../node_modules/classnames/index.js","webpack://_N_E/?c3c3","webpack://_N_E/./pages/sign-in/index.tsx","webpack://_N_E/./utils/validation.ts","webpack://_N_E/../node_modules/next/router.js","webpack://_N_E/../packages/editor/lib-es/core/components/ButtonLoading/ButtonLoading.js","webpack://_N_E/<anon>"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/sign-in\",\n      function () {\n        return require(\"private-next-pages/sign-in/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/sign-in\"])\n      });\n    }\n  ","import React, { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ButtonLoading, NOOP } from '@react-page/editor';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { toast } from 'react-toastify';\r\nimport { ActionType, useStateContext } from '../../state';\r\nimport { emailValidation } from '../../utils/validation';\r\n\r\nconst SignInPage = () => {\r\n  const {\r\n    state: { user, token },\r\n    dispatch,\r\n  } = useStateContext();\r\n  const router = useRouter();\r\n  const [show, setShow] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [emailSignInLoading, setEmailSignInLoading] = useState(false);\r\n  const [googleSignInLoading, setGoogleSignInLoading] = useState(false);\r\n  const [isValidation, setIsValidation] = useState(false);\r\n\r\n  const validation = () => {\r\n    if (password !== '' && emailValidation(email)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const emailSignIn = async () => {\r\n    setIsValidation(true);\r\n    setEmailSignInLoading(true);\r\n    const val_result = validation();\r\n    if (val_result) {\r\n      const options = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n        }),\r\n      };\r\n\r\n      try {\r\n        await fetch(\r\n          `${process.env.NEXT_PUBLIC_SERVER_API_URL}/auth/signin`,\r\n          options\r\n        )\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            if (res.code === 200) {\r\n              dispatch({\r\n                type: ActionType.UPDATE_USER,\r\n                payload: res.data,\r\n              });\r\n              dispatch({\r\n                type: ActionType.UPDATE_TOKEN,\r\n                payload: res.data.token,\r\n              });\r\n              router.push('/home');\r\n            } else {\r\n              toast.error(res.message);\r\n            }\r\n            setEmailSignInLoading(false);\r\n          });\r\n      } catch (error) {\r\n        toast.error('Network Error!');\r\n        setEmailSignInLoading(false);\r\n      }\r\n    } else {\r\n      setEmailSignInLoading(false);\r\n    }\r\n  };\r\n\r\n  const goSignUp = () => {\r\n    router.push({\r\n      pathname: '/sign-up',\r\n    });\r\n  };\r\n\r\n  const goForgotPassword = () => {\r\n    router.push({\r\n      pathname: '/forgot-password',\r\n    });\r\n  };\r\n\r\n  const googleSignIn = async (response: any) => {\r\n    setGoogleSignInLoading(true);\r\n    const access_token = response.accessToken;\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ access_token }),\r\n    };\r\n\r\n    try {\r\n      await fetch(\r\n        `${process.env.NEXT_PUBLIC_SERVER_API_URL}/auth/oauth/google`,\r\n        options\r\n      )\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.code === 200) {\r\n            dispatch({\r\n              type: ActionType.UPDATE_USER,\r\n              payload: res.data,\r\n            });\r\n            dispatch({\r\n              type: ActionType.UPDATE_TOKEN,\r\n              payload: res.data.token,\r\n            });\r\n            router.push('/home');\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      toast.error('Network Error!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"flex w-full items-center justify-center h-[100vh]\"\r\n      style={{ fontFamily: 'RocGrotesk-Regular' }}\r\n    >\r\n      <div className=\"flex flex-col w-[400px] h-fit bg-alpha-10 rounded-[15px] p-[30px] gap-[20px]\">\r\n        <div className=\"flex items-center justify-center w-full\">\r\n          <img\r\n            className=\"w-[130px] shrink-0 object-cover\"\r\n            alt=\"MINT CHIP\"\r\n            src=\"/images/mintchip-beta-logo.png\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"text-gray-2 text-[18px] font-bold\">Sign in</div>\r\n          <div className=\"text-gray-1 text-[16px]\">to continue to MINTCHIP</div>\r\n        </div>\r\n        <div className=\"flex flex-col gap-[10px]\">\r\n          {/* <div>\r\n            <GoogleLogin\r\n              clientId={process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID || ''}\r\n              buttonText=\"Sign up with Google\"\r\n              onSuccess={googleSignIn}\r\n              onFailure={() => NOOP}\r\n              render={(renderProps) => (\r\n                <button\r\n                  onClick={() => renderProps.onClick()}\r\n                  className=\"group flex flex-row items-center justify-between w-full bg-transparent border-solid border-gray-1 border-[1px] px-[20px] text-gray-2 rounded-[5px] h-[40px] hover:bg-alpha-10 down active:border-white\"\r\n                >\r\n                  <div className=\"flex flex-row items-center justify-start w-full gap-[20px]\">\r\n                    <img\r\n                      className=\"w-[16px]\"\r\n                      src=\"https://images.clerk.dev/static/google.svg?width=160\"\r\n                      alt=\"\"\r\n                    />\r\n                    Continue with Google\r\n                  </div>\r\n                  <div className=\"flex flex-row items-center opacity-0 group-hover:opacity-100 w-[16px] h-[16px] group-hover:right-0\">\r\n                    {googleSignInLoading === true ? (\r\n                      <ButtonLoading />\r\n                    ) : (\r\n                      <img\r\n                        className=\"relative w-full shrink-0\"\r\n                        src=\"/images/vuesaxoutlinearrowright2.svg\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </button>\r\n              )}\r\n            />\r\n          </div> */}\r\n          {/* <div className=\"inline-flex items-center justify-center w-full\">\r\n            <hr className=\"w-full h-px my-8 bg-gray-1 border-[1px]\" />\r\n            <span className=\"px-3 font-medium text-gray-900 -translate-x-1/2 left-1/2 text-gray-1\">\r\n              or\r\n            </span>\r\n            <hr className=\"w-full h-px my-8 bg-gray-1 border-[1px]\" />\r\n          </div> */}\r\n          <div className=\"flex flex-col gap-[20px]\">\r\n            <div className=\"flex flex-col gap-[3px]\">\r\n              <label className=\"text-[14px] text-gray-2\" htmlFor=\"\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className={\r\n                  'bg-transparent focus:outline-none focus:border-white border-gray-1 border-[1px] border-solid rounded-[5px] h-[40px] px-[15px] text-gray-2' +\r\n                  (isValidation === true && emailValidation(email) === false\r\n                    ? ' border-red border-solid border-[1px]'\r\n                    : '')\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col gap-[3px]\">\r\n              <div className=\"flex justify-between\">\r\n                <label className=\"text-[14px] text-gray-2\" htmlFor=\"\">\r\n                  Password\r\n                </label>\r\n                <div\r\n                  onClick={() => goForgotPassword()}\r\n                  className=\"text-[14px] text-primary-blue hover:underline hover:cursor-pointer\"\r\n                >\r\n                  Forgot password\r\n                </div>\r\n              </div>\r\n              <div className=\"flex relative\">\r\n                <input\r\n                  value={password}\r\n                  type={show ? 'text' : 'password'}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className={\r\n                    'bg-transparent focus:outline-none focus:border-white border-gray-1 border-[1px] border-solid rounded-[5px] w-full h-[40px] pl-[15px] pr-[35px] text-gray-2' +\r\n                    (isValidation === true && password === ''\r\n                      ? ' border-red border-solid border-[1px]'\r\n                      : '')\r\n                  }\r\n                />\r\n                <div className=\"absolute h-full flex items-center right-[10px]\">\r\n                  <button\r\n                    onClick={() => setShow(!show)}\r\n                    className=\"flex items-center focus:outline-none bg-transparent w-[20px] h-[20px] p-0\"\r\n                  >\r\n                    {show === true ? (\r\n                      <svg\r\n                        className=\"w-6 h-6\"\r\n                        fill=\"none\"\r\n                        stroke=\"white\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                        ></path>\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n                        ></path>\r\n                      </svg>\r\n                    ) : (\r\n                      <svg\r\n                        className=\"w-6 h-6\"\r\n                        fill=\"none\"\r\n                        stroke=\"gray\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"\r\n                        ></path>\r\n                      </svg>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n              <button\r\n                onClick={() => emailSignIn()}\r\n                className=\"flex items-center justify-center w-full bg-primary-blue text-gray-2 rounded-[5px] h-[40px] hover:bg-primary-blue-hover active:border-solid border-white border-[1px]\"\r\n              >\r\n                {emailSignInLoading === true ? <ButtonLoading /> : 'CONTINUE'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-row items-center justify-start\">\r\n          <div className=\"text-gray-1 text-[14px]\">No account?</div>\r\n          &nbsp;\r\n          <div\r\n            onClick={() => goSignUp()}\r\n            className=\"text-primary-blue text-[14px] hover:cursor-pointer hover:underline\"\r\n          >\r\n            Sign up\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n","export function emailValidation(email: string) {\r\n  if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n","module.exports = require('./dist/client/router')\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nvar ButtonLoading = function (_a) {\r\n    var _b = _a.containerClass, containerClass = _b === void 0 ? '' : _b;\r\n    var color = '#FFFFFF';\r\n    return (React.createElement(\"span\", { className: classNames('loading', containerClass) },\r\n        React.createElement(\"span\", { style: { backgroundColor: color } }),\r\n        React.createElement(\"span\", { style: { backgroundColor: color } }),\r\n        React.createElement(\"span\", { style: { backgroundColor: color } })));\r\n};\r\nexport default ButtonLoading;\r\n//# sourceMappingURL=ButtonLoading.js.map"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","undefined","window","__NEXT_P","__webpack_require__","SignInPage","state","user","token","dispatch","useStateContext","router","useRouter","show","setShow","useState","password","setPassword","email","setEmail","emailSignInLoading","setEmailSignInLoading","googleSignInLoading","setGoogleSignInLoading","isValidation","setIsValidation","validation","emailValidation","emailSignIn","val_result","options","method","headers","body","JSON","stringify","fetch","concat","process","then","res","json","code","type","ActionType","payload","data","toast","message","error","goSignUp","pathname","goForgotPassword","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","style","fontFamily","jsxs","img","alt","src","label","htmlFor","input","value","onChange","e","target","onClick","button","svg","fill","stroke","viewBox","xmlns","path","strokeLinecap","strokeLinejoin","strokeWidth","d","ButtonLoading","__webpack_exports__","test","_a","_b","containerClass","color","react__WEBPACK_IMPORTED_MODULE_1__","createElement","classnames__WEBPACK_IMPORTED_MODULE_0___default","backgroundColor"],"sourceRoot":""}
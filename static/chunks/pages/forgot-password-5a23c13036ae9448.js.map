{"version":3,"file":"static/chunks/pages/forgot-password-5a23c13036ae9448.js","mappings":"sFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,mBACA,WACA,OAAeC,EAAQ,MACvB,EACA,yICAA,IAAMC,EAAqB,IAAM,CAC/B,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAACC,EAAOC,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC7B,CAACC,EAASC,EAAW,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACjC,CAACG,EAAcC,EAAgB,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAQ3CK,EAAW,SAAY,CAC3BH,EAAW,IACX,IAAMI,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,kBAClB,EACAC,KAAMC,KAAKC,SAAS,CAAC,CAAEb,MAAOA,CAAM,EACtC,EAEA,GAAI,CACF,MAAMc,MACJ,GAA0CC,MAAA,CAAvCC,kCAAuC,gBAC1CR,GAECS,IAAI,CAAC,GAASC,EAAIC,IAAI,IACtBF,IAAI,CAAC,GAAS,CACTC,MAAAA,EAAIE,IAAI,CACVd,EAAgB,IAEhBe,EAAAA,EAAAA,CAAAA,KAAW,CAACH,EAAII,OAAO,EAEzBlB,EAAW,GACb,EACJ,CAAE,MAAOmB,EAAO,CACdF,EAAAA,EAAAA,CAAAA,KAAW,CAAC,kBACZjB,EAAW,GACb,CACF,EAEMoB,EAAY,IAAM,CACtB1B,EAAOH,IAAI,CAAC,CACV8B,SAAU,UACZ,EACF,QAEA,CAAqB,IAAjBpB,EAEA,GAAAqB,EAAAC,GAAA,EAACC,EAAAA,CAAiBA,CAAAA,CAAC5B,MAAOA,EAAOM,gBAAiBA,IAKpD,GAAAoB,EAAAC,GAAA,EAACE,MAAAA,CACCC,UAAU,oDACVC,MAAO,CAAEC,WAAY,oBAAqB,WAE1C,GAAAN,EAAAO,IAAA,EAACJ,MAAAA,CAAIC,UAAU,yFACb,GAAAJ,EAAAC,GAAA,EAACE,MAAAA,CAAIC,UAAU,mDACb,GAAAJ,EAAAC,GAAA,EAACO,MAAAA,CACCJ,UAAU,kCACVK,IAAI,qCAGR,GAAAT,EAAAO,IAAA,EAACJ,MAAAA,CACCO,QAAS,IAAMZ,IACfM,UAAU,kGAEV,GAAAJ,EAAAC,GAAA,EAACU,EAAAA,CAAOA,CAAAA,CAACC,KAAMC,EAAAA,EAAAA,CAAAA,UAAqB,CAAEC,OAAM,KAC5C,GAAAd,EAAAC,GAAA,EAACE,MAAAA,CAAIC,UAAU,6BAAoB,YAErC,GAAAJ,EAAAC,GAAA,EAACE,MAAAA,UACC,GAAAH,EAAAC,GAAA,EAACE,MAAAA,CAAIC,UAAU,6CAAoC,6BAIrD,GAAAJ,EAAAO,IAAA,EAACJ,MAAAA,CAAIC,UAAU,oCACb,GAAAJ,EAAAC,GAAA,EAACc,QAAAA,CAAMX,UAAU,0BAA0BY,QAAQ,YAAG,kBAGtD,GAAAhB,EAAAC,GAAA,EAACgB,QAAAA,CACCC,KAAK,QACLC,MAAO7C,EACP8C,SAAU,GAAO7C,EAAS8C,EAAEC,MAAM,CAACH,KAAK,EACxCf,UAAU,iJAGd,GAAAJ,EAAAC,GAAA,EAACE,MAAAA,CAAIC,UAAU,YACb,GAAAJ,EAAAC,GAAA,EAACsB,SAAAA,CACCb,QAAS,IAAM7B,IACfuB,UAAU,gLAET3B,CAAY,IAAZA,EAAmB,GAAAuB,EAAAC,GAAA,EAACuB,EAAAA,CAAaA,CAAAA,CAAAA,GAAM,WAAW,SA1C5D,CAkDHC,CAAAA,EAAA,QAAetD","sources":["webpack://_N_E/?c90a","webpack://_N_E/./pages/forgot-password/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/forgot-password\",\n      function () {\n        return require(\"private-next-pages/forgot-password/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/forgot-password\"])\n      });\n    }\n  ","import React, { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { ButtonLoading, ICON_NAMES, SVGIcon } from '@react-page/editor';\r\nimport VerificationModal from '../../components/VerificationModal';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ForgotPasswordPage = () => {\r\n  const router = useRouter();\r\n  const [email, setEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [isVerifyPage, setIsVerifyPage] = useState(false);\r\n\r\n  const goSignIn = () => {\r\n    router.push({\r\n      pathname: '/sign-in',\r\n    });\r\n  };\r\n\r\n  const sendCode = async () => {\r\n    setLoading(true);\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email: email }),\r\n    };\r\n\r\n    try {\r\n      await fetch(\r\n        `${process.env.NEXT_PUBLIC_SERVER_API_URL}/auth/resend`,\r\n        options\r\n      )\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.code === 200) {\r\n            setIsVerifyPage(true);\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n          setLoading(false);\r\n        });\r\n    } catch (error) {\r\n      toast.error('Network Error!');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const go_signin = () => {\r\n    router.push({\r\n      pathname: '/sign-in',\r\n    });\r\n  };\r\n\r\n  if (isVerifyPage === true) {\r\n    return (\r\n      <VerificationModal email={email} setIsVerifyPage={setIsVerifyPage} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"flex w-full items-center justify-center h-[100vh]\"\r\n      style={{ fontFamily: 'RocGrotesk-Regular' }}\r\n    >\r\n      <div className=\"flex flex-col w-[400px] h-fit bg-alpha-10 rounded-[15px] p-[30px] gap-[20px]\">\r\n        <div className=\"flex items-center justify-center w-full\">\r\n          <img\r\n            className=\"w-[130px] shrink-0 object-cover\"\r\n            src=\"/images/mintchip-beta-logo.png\"\r\n          />\r\n        </div>\r\n        <div\r\n          onClick={() => go_signin()}\r\n          className=\"flex flex-row items-center justify-start text-gray-2 text-[16px] hover:cursor-pointer\"\r\n        >\r\n          <SVGIcon name={ICON_NAMES.LEFT_ARROW} active />\r\n          <div className=\"text-primary-blue\">Back</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"text-gray-2 text-[18px] font-bold\">\r\n            Send verification code\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col gap-[3px]\">\r\n          <label className=\"text-[14px] text-gray-2\" htmlFor=\"\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"bg-transparent focus:outline-none focus:border-white border-gray-1 border-[1px] border-solid rounded-[5px] h-[40px] px-[15px] text-gray-2\"\r\n          />\r\n        </div>\r\n        <div className=\"\">\r\n          <button\r\n            onClick={() => sendCode()}\r\n            className=\"flex items-center justify-center w-full bg-primary-blue text-gray-2 rounded-[5px] h-[40px] hover:bg-primary-blue-hover active:border-solid border-white border-[1px]\"\r\n          >\r\n            {loading === true ? <ButtonLoading /> : 'SEND CODE'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n"],"names":["window","__NEXT_P","push","__webpack_require__","ForgotPasswordPage","router","useRouter","email","setEmail","useState","loading","setLoading","isVerifyPage","setIsVerifyPage","sendCode","options","method","headers","body","JSON","stringify","fetch","concat","process","then","res","json","code","toast","message","error","go_signin","pathname","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","VerificationModal","div","className","style","fontFamily","jsxs","img","src","onClick","SVGIcon","name","ICON_NAMES","active","label","htmlFor","input","type","value","onChange","e","target","button","ButtonLoading","__webpack_exports__"],"sourceRoot":""}
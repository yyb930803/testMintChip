{"version":3,"file":"static/chunks/5635.83b548bbdbb41859.js","mappings":"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","sources":["webpack://_N_E/../node_modules/direction/index.js","webpack://_N_E/../node_modules/immer/dist/immer.esm.js","webpack://_N_E/../node_modules/lodash/_Symbol.js","webpack://_N_E/../node_modules/lodash/_baseGetTag.js","webpack://_N_E/../node_modules/lodash/_baseTrim.js","webpack://_N_E/../node_modules/lodash/_freeGlobal.js","webpack://_N_E/../node_modules/lodash/_getRawTag.js","webpack://_N_E/../node_modules/lodash/_objectToString.js","webpack://_N_E/../node_modules/lodash/_root.js","webpack://_N_E/../node_modules/lodash/_trimmedEndIndex.js","webpack://_N_E/../node_modules/lodash/debounce.js","webpack://_N_E/../node_modules/lodash/isObject.js","webpack://_N_E/../node_modules/lodash/isObjectLike.js","webpack://_N_E/../node_modules/lodash/isSymbol.js","webpack://_N_E/../node_modules/lodash/now.js","webpack://_N_E/../node_modules/lodash/throttle.js","webpack://_N_E/../node_modules/lodash/toNumber.js","webpack://_N_E/../node_modules/compute-scroll-into-view/dist/index.module.js","webpack://_N_E/../node_modules/scroll-into-view-if-needed/es/index.js","webpack://_N_E/../node_modules/slate-react/dist/index.es.js","webpack://_N_E/../node_modules/slate-react/node_modules/is-hotkey/lib/index.js","webpack://_N_E/../node_modules/is-plain-object/dist/is-plain-object.mjs","webpack://_N_E/<anon>"],"sourcesContent":["'use strict'\n\nmodule.exports = direction\n\nvar RTL = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nvar LTR =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\nvar rtl = new RegExp('^[^' + LTR + ']*[' + RTL + ']')\nvar ltr = new RegExp('^[^' + RTL + ']*[' + LTR + ']')\n\nfunction direction(value) {\n  value = String(value || '')\n\n  if (rtl.test(value)) {\n    return 'rtl'\n  }\n\n  if (ltr.test(value)) {\n    return 'ltr'\n  }\n\n  return 'neutral'\n}\n","function n(n){for(var t=arguments.length,r=Array(t>1?t-1:0),e=1;e<t;e++)r[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,r):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(r.length?\" \"+r.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function t(n){return!!n&&!!n[Q]}function r(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var t=Object.getPrototypeOf(n);if(null===t)return!0;var r=Object.hasOwnProperty.call(t,\"constructor\")&&t.constructor;return r===Object||\"function\"==typeof r&&Function.toString.call(r)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(r){return t(r)||n(23,r),r[Q].t}function i(n,t,r){void 0===r&&(r=!1),0===o(n)?(r?Object.keys:nn)(n).forEach((function(e){r&&\"symbol\"==typeof e||t(e,n[e],n)})):n.forEach((function(r,e){return t(e,r,n)}))}function o(n){var t=n[Q];return t?t.i>3?t.i-4:t.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,t){return 2===o(n)?n.has(t):Object.prototype.hasOwnProperty.call(n,t)}function a(n,t){return 2===o(n)?n.get(t):n[t]}function f(n,t,r){var e=o(n);2===e?n.set(t,r):3===e?(n.delete(t),n.add(r)):n[t]=r}function c(n,t){return n===t?0!==n||1/n==1/t:n!=n&&t!=t}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var t=tn(n);delete t[Q];for(var r=nn(t),e=0;e<r.length;e++){var i=r[e],o=t[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(t[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),t)}function d(n,e){return void 0===e&&(e=!1),y(n)||t(n)||!r(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,t){return d(t,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(t){var r=rn[t];return r||n(18,t),r}function m(n,t){rn[n]||(rn[n]=t)}function _(){return\"production\"===process.env.NODE_ENV||U||n(0),U}function j(n,t){t&&(b(\"Patches\"),n.u=[],n.s=[],n.v=t)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var t=n[Q];0===t.i||1===t.i?t.j():t.O=!0}function P(t,e){e._=e.p.length;var i=e.p[0],o=void 0!==t&&t!==i;return e.h.g||b(\"ES5\").S(e,t,o),o?(i[Q].P&&(O(e),n(4)),r(t)&&(t=M(e,t),e.l||x(e,t)),e.u&&b(\"Patches\").M(i[Q],t,e.u,e.s)):t=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),t!==H?t:void 0}function M(n,t,r){if(y(t))return t;var e=t[Q];if(!e)return i(t,(function(i,o){return A(n,e,t,i,o,r)}),!0),t;if(e.A!==n)return t;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(t,i){return A(n,e,o,t,i,r)})),x(n,o,!1),r&&n.u&&b(\"Patches\").R(e,r,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if(\"production\"!==process.env.NODE_ENV&&c===o&&n(5),t(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!t(v))return;e.m=!1}if(r(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,t,r){void 0===r&&(r=!1),n.h.F&&n.m&&d(t,r)}function z(n,t){var r=n[Q];return(r?p(r):n)[t]}function I(n,t){if(t in n)for(var r=Object.getPrototypeOf(n);r;){var e=Object.getOwnPropertyDescriptor(r,t);if(e)return e;r=Object.getPrototypeOf(r)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,t,r){var e=s(t)?b(\"MapSet\").N(t,r):v(t)?b(\"MapSet\").T(t,r):n.g?function(n,t){var r=Array.isArray(n),e={i:r?1:0,A:t?t.A:_(),P:!1,I:!1,D:{},l:t,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;r&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(t,r):b(\"ES5\").J(t,r);return(r?r.A:_()).p.push(e),e}function D(e){return t(e)||n(22,e),function n(t){if(!r(t))return t;var e,u=t[Q],c=o(t);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(t,c),u.I=!1}else e=F(t,c);return i(e,(function(t,r){u&&a(u.t,t)===r||f(e,t,n(r))})),3===c?new Set(e):e}(e)}function F(n,t){switch(t){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function r(n,t){var r=s[n];return r?r.enumerable=t:s[n]=r={configurable:!0,enumerable:t,get:function(){var t=this[Q];return\"production\"!==process.env.NODE_ENV&&f(t),en.get(t,n)},set:function(t){var r=this[Q];\"production\"!==process.env.NODE_ENV&&f(r),en.set(r,n,t)}},r}function e(n){for(var t=n.length-1;t>=0;t--){var r=n[t][Q];if(!r.P)switch(r.i){case 5:a(r)&&k(r);break;case 4:o(r)&&k(r)}}}function o(n){for(var t=n.t,r=n.k,e=nn(r),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=t[o];if(void 0===a&&!u(t,o))return!0;var f=r[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!t[Q];return e.length!==nn(t).length+(v?0:1)}function a(n){var t=n.k;if(t.length!==n.t.length)return!0;var r=Object.getOwnPropertyDescriptor(t,t.length-1);return!(!r||r.get)}function f(t){t.O&&n(3,JSON.stringify(p(t)))}var s={};m(\"ES5\",{J:function(n,t){var e=Array.isArray(n),i=function(n,t){if(n){for(var e=Array(t.length),i=0;i<t.length;i++)Object.defineProperty(e,\"\"+i,r(i,!0));return e}var o=tn(t);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=r(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(t),o)}(e,n),o={i:e?5:4,A:t?t.A:_(),P:!1,I:!1,D:{},l:t,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,r,o){o?t(r)&&r[Q].A===n&&e(n.p):(n.u&&function n(t){if(t&&\"object\"==typeof t){var r=t[Q];if(r){var e=r.t,o=r.k,f=r.D,c=r.i;if(4===c)i(o,(function(t){t!==Q&&(void 0!==e[t]||u(e,t)?f[t]||n(o[t]):(f[t]=!0,k(r)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(r))}));else if(5===c){if(a(r)&&(k(r),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!r(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var t=Object.create(Object.getPrototypeOf(n));for(var i in n)t[i]=e(n[i]);return u(n,L)&&(t[L]=n[L]),t}function f(n){return t(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(t,r){return r.forEach((function(r){for(var i=r.path,u=r.op,f=t,s=0;s<i.length-1;s++){var v=o(f),p=\"\"+i[s];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(r.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(r.value);default:return delete f[h]}default:n(17,u)}})),t},R:function(n,t,r,e){switch(n.i){case 0:case 4:case 2:return function(n,t,r,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=t.concat(n);r.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,t,r,e);case 5:case 1:return function(n,t,r,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,r];r=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=t.concat([v]);r.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=t.concat([l]);r.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:t.concat([\"length\"]),value:i.length})}(n,t,r,e);case 3:return function(n,t,r,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=t.concat([u]);r.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=t.concat([u]);r.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,t,r,e)}},M:function(n,t,r,e){r.push({op:\"replace\",path:[],value:t===H?void 0:t}),e.push({op:\"replace\",path:[],value:n.t})}})}function C(){function t(n,t){function r(){this.constructor=n}a(n,t),n.prototype=(r.prototype=t.prototype,new r)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(t){if(r(t)){var e=R(n.A.h,t,n);n.p.set(t,e),n.o.add(e)}else n.o.add(t)})))}function u(t){t.O&&n(3,JSON.stringify(p(t)))}var a=function(n,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r])})(n,t)},f=function(){function n(n,t){return this[Q]={i:2,l:t,A:t?t.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}t(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,t){var r=this[Q];return u(r),p(r).has(n)&&p(r).get(n)===t||(e(r),k(r),r.D.set(n,!0),r.o.set(n,t),r.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var t=this[Q];return u(t),e(t),k(t),t.D.set(n,!1),t.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(t){n.D.set(t,!1)})),n.o.clear())},o.forEach=function(n,t){var r=this;p(this[Q]).forEach((function(e,i){n.call(t,r.get(i),i,r)}))},o.get=function(n){var t=this[Q];u(t);var i=p(t).get(n);if(t.I||!r(i))return i;if(i!==t.t.get(n))return i;var o=R(t.A.h,i,t);return e(t),t.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,t=this,r=this.keys();return(n={})[V]=function(){return t.values()},n.next=function(){var n=r.next();return n.done?n:{done:!1,value:t.get(n.value)}},n},o.entries=function(){var n,t=this,r=this.keys();return(n={})[V]=function(){return t.entries()},n.next=function(){var n=r.next();if(n.done)return n;var e=t.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,t){return this[Q]={i:3,l:t,A:t?t.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}t(n,Set);var r=n.prototype;return Object.defineProperty(r,\"size\",{get:function(){return p(this[Q]).size}}),r.has=function(n){var t=this[Q];return u(t),t.o?!!t.o.has(n)||!(!t.p.has(n)||!t.o.has(t.p.get(n))):t.t.has(n)},r.add=function(n){var t=this[Q];return u(t),this.has(n)||(o(t),k(t),t.o.add(n)),this},r.delete=function(n){if(!this.has(n))return!1;var t=this[Q];return u(t),o(t),k(t),t.o.delete(n)||!!t.p.has(n)&&t.o.delete(t.p.get(n))},r.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},r.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},r.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},r.keys=function(){return this.values()},r[V]=function(){return this.values()},r.forEach=function(n,t){for(var r=this.values(),e=r.next();!e.done;)n.call(t,e.value,e.value,this),e=r.next()},n}();m(\"MapSet\",{N:function(n,t){return new f(n,t)},T:function(n,t){return new c(n,t)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,tn=Object.getOwnPropertyDescriptors||function(n){var t={};return nn(n).forEach((function(r){t[r]=Object.getOwnPropertyDescriptor(n,r)})),t},rn={},en={get:function(n,t){if(t===Q)return n;var e=p(n);if(!u(e,t))return function(n,t,r){var e,i=I(t,r);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,t);var i=e[t];return n.I||!r(i)?i:i===z(n.t,t)?(E(n),n.o[t]=R(n.A.h,i,n)):i},has:function(n,t){return t in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,t,r){var e=I(p(n),t);if(null==e?void 0:e.set)return e.set.call(n.k,r),!0;if(!n.P){var i=z(p(n),t),o=null==i?void 0:i[Q];if(o&&o.t===r)return n.o[t]=r,n.D[t]=!1,!0;if(c(r,i)&&(void 0!==r||u(n.t,t)))return!0;E(n),k(n)}return n.o[t]===r&&\"number\"!=typeof r&&(void 0!==r||t in n.o)||(n.o[t]=r,n.D[t]=!0,!0)},deleteProperty:function(n,t){return void 0!==z(n.t,t)||t in n.t?(n.D[t]=!1,E(n),k(n)):delete n.D[t],n.o&&delete n.o[t],!0},getOwnPropertyDescriptor:function(n,t){var r=p(n),e=Reflect.getOwnPropertyDescriptor(r,t);return e?{writable:!0,configurable:1!==n.i||\"length\"!==t,enumerable:e.enumerable,value:r[t]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,t){on[n]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),on.deleteProperty=function(t,r){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(r))&&n(13),en.deleteProperty.call(this,t[0],r)},on.set=function(t,r,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==r&&isNaN(parseInt(r))&&n(14),en.set.call(this,t[0],r,e,t[0])};var un=function(){function e(t){var e=this;this.g=B,this.F=!0,this.produce=function(t,i,o){if(\"function\"==typeof t&&\"function\"!=typeof i){var u=i;i=t;var a=e;return function(n){var t=this;void 0===n&&(n=u);for(var r=arguments.length,e=Array(r>1?r-1:0),o=1;o<r;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var r;return(r=i).call.apply(r,[t,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),r(t)){var c=w(e),s=R(e,t,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!t||\"object\"!=typeof t){if((f=i(t))===H)return;return void 0===f&&(f=t),e.F&&d(f,!0),f}n(21,t)},this.produceWithPatches=function(n,t){return\"function\"==typeof n?function(t){for(var r=arguments.length,i=Array(r>1?r-1:0),o=1;o<r;o++)i[o-1]=arguments[o];return e.produceWithPatches(t,(function(t){return n.apply(void 0,[t].concat(i))}))}:[e.produce(n,t,(function(n,t){r=n,i=t})),r,i];var r,i},\"boolean\"==typeof(null==t?void 0:t.useProxies)&&this.setUseProxies(t.useProxies),\"boolean\"==typeof(null==t?void 0:t.autoFreeze)&&this.setAutoFreeze(t.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){r(e)||n(8),t(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(t,r){var e=t&&t[Q];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,r),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(t){t&&!B&&n(20),this.g=t},i.applyPatches=function(n,r){var e;for(e=r.length-1;e>=0;e--){var i=r[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}var o=b(\"Patches\").$;return t(n)?o(n,r):this.produce(n,(function(n){return o(n,r.slice(e+1))}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);export default fn;export{un as Immer,pn as applyPatches,K as castDraft,$ as castImmutable,ln as createDraft,D as current,J as enableAllPlugins,N as enableES5,C as enableMapSet,T as enablePatches,dn as finishDraft,d as freeze,L as immerable,t as isDraft,r as isDraftable,H as nothing,e as original,fn as produce,cn as produceWithPatches,sn as setAutoFreeze,vn as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","function t(t){return\"object\"==typeof t&&null!=t&&1===t.nodeType}function e(t,e){return(!e||\"hidden\"!==t)&&\"visible\"!==t&&\"clip\"!==t}function n(t,n){if(t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth){var r=getComputedStyle(t,null);return e(r.overflowY,n)||e(r.overflowX,n)||function(t){var e=function(t){if(!t.ownerDocument||!t.ownerDocument.defaultView)return null;try{return t.ownerDocument.defaultView.frameElement}catch(t){return null}}(t);return!!e&&(e.clientHeight<t.scrollHeight||e.clientWidth<t.scrollWidth)}(t)}return!1}function r(t,e,n,r,i,o,l,d){return o<t&&l>e||o>t&&l<e?0:o<=t&&d<=n||l>=e&&d>=n?o-t-r:l>e&&d<n||o<t&&d>n?l-e+i:0}export default function(e,i){var o=window,l=i.scrollMode,d=i.block,u=i.inline,h=i.boundary,a=i.skipOverflowHiddenElements,c=\"function\"==typeof h?h:function(t){return t!==h};if(!t(e))throw new TypeError(\"Invalid target\");for(var f=document.scrollingElement||document.documentElement,s=[],p=e;t(p)&&c(p);){if((p=p.parentElement)===f){s.push(p);break}null!=p&&p===document.body&&n(p)&&!n(document.documentElement)||null!=p&&n(p,a)&&s.push(p)}for(var m=o.visualViewport?o.visualViewport.width:innerWidth,g=o.visualViewport?o.visualViewport.height:innerHeight,w=window.scrollX||pageXOffset,v=window.scrollY||pageYOffset,W=e.getBoundingClientRect(),b=W.height,H=W.width,y=W.top,E=W.right,M=W.bottom,V=W.left,x=\"start\"===d||\"nearest\"===d?y:\"end\"===d?M:y+b/2,I=\"center\"===u?V+H/2:\"end\"===u?E:V,C=[],T=0;T<s.length;T++){var k=s[T],B=k.getBoundingClientRect(),D=B.height,O=B.width,R=B.top,X=B.right,Y=B.bottom,L=B.left;if(\"if-needed\"===l&&y>=0&&V>=0&&M<=g&&E<=m&&y>=R&&M<=Y&&V>=L&&E<=X)return C;var S=getComputedStyle(k),j=parseInt(S.borderLeftWidth,10),q=parseInt(S.borderTopWidth,10),z=parseInt(S.borderRightWidth,10),A=parseInt(S.borderBottomWidth,10),F=0,G=0,J=\"offsetWidth\"in k?k.offsetWidth-k.clientWidth-j-z:0,K=\"offsetHeight\"in k?k.offsetHeight-k.clientHeight-q-A:0;if(f===k)F=\"start\"===d?x:\"end\"===d?x-g:\"nearest\"===d?r(v,v+g,g,q,A,v+x,v+x+b,b):x-g/2,G=\"start\"===u?I:\"center\"===u?I-m/2:\"end\"===u?I-m:r(w,w+m,m,j,z,w+I,w+I+H,H),F=Math.max(0,F+v),G=Math.max(0,G+w);else{F=\"start\"===d?x-R-q:\"end\"===d?x-Y+A+K:\"nearest\"===d?r(R,Y,D,q,A+K,x,x+b,b):x-(R+D/2)+K/2,G=\"start\"===u?I-L-j:\"center\"===u?I-(L+O/2)+J/2:\"end\"===u?I-X+z+J:r(L,X,O,j,z+J,I,I+H,H);var N=k.scrollLeft,P=k.scrollTop;x+=P-(F=Math.max(0,Math.min(P+F,k.scrollHeight-D+K))),I+=N-(G=Math.max(0,Math.min(N+G,k.scrollWidth-O+J)))}C.push({el:k,top:F,left:G})}return C}\n//# sourceMappingURL=index.module.js.map\n","import compute from 'compute-scroll-into-view';\n\nfunction isOptionsObject(options) {\n  return options === Object(options) && Object.keys(options).length !== 0;\n}\n\nfunction defaultBehavior(actions, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n\n  var canSmoothScroll = ('scrollBehavior' in document.body.style);\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({\n        top: top,\n        left: left,\n        behavior: behavior\n      });\n    } else {\n      el.scrollTop = top;\n      el.scrollLeft = left;\n    }\n  });\n}\n\nfunction getOptions(options) {\n  if (options === false) {\n    return {\n      block: 'end',\n      inline: 'nearest'\n    };\n  }\n\n  if (isOptionsObject(options)) {\n    return options;\n  }\n\n  return {\n    block: 'start',\n    inline: 'nearest'\n  };\n}\n\nfunction scrollIntoView(target, options) {\n  var targetIsDetached = !target.ownerDocument.documentElement.contains(target);\n\n  if (isOptionsObject(options) && typeof options.behavior === 'function') {\n    return options.behavior(targetIsDetached ? [] : compute(target, options));\n  }\n\n  if (targetIsDetached) {\n    return;\n  }\n\n  var computeOptions = getOptions(options);\n  return defaultBehavior(compute(target, computeOptions), computeOptions.behavior);\n}\n\nexport default scrollIntoView;","import React, { useLayoutEffect, useEffect, useRef, useState, Fragment, useContext, createContext, useMemo, useCallback, useReducer } from 'react';\nimport { Path, Node, Editor, Text as Text$1, Range, Element as Element$1, Transforms } from 'slate';\nimport getDirection from 'direction';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { isKeyHotkey } from 'is-hotkey';\nimport ReactDOM from 'react-dom';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar IS_REACT_VERSION_17_OR_ABOVE = parseInt(React.version.split('.')[0], 10) >= 17;\nvar IS_IOS = typeof navigator !== 'undefined' && typeof window !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nvar IS_APPLE = typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent);\nvar IS_ANDROID = typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent);\nvar IS_FIREFOX = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);\nvar IS_SAFARI = typeof navigator !== 'undefined' && /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent); // \"modern\" Edge was released at 79.x\n\nvar IS_EDGE_LEGACY = typeof navigator !== 'undefined' && /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent);\nvar IS_CHROME = typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent); // Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\n\nvar IS_CHROME_LEGACY = typeof navigator !== 'undefined' && /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent); // Firefox did not support `beforeInput` until `v87`.\n\nvar IS_FIREFOX_LEGACY = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(navigator.userAgent); // qq browser\n\nvar IS_QQBROWSER = typeof navigator !== 'undefined' && /.*QQBrowser/.test(navigator.userAgent); // UC mobile browser\n\nvar IS_UC_MOBILE = typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent); // Wechat browser\n\nvar IS_WECHATBROWSER = typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent); // Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\n\nvar CAN_USE_DOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined'); // COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\n\nvar HAS_BEFORE_INPUT_SUPPORT = !IS_CHROME_LEGACY && !IS_EDGE_LEGACY && // globalThis is undefined in older browsers\ntypeof globalThis !== 'undefined' && globalThis.InputEvent && // @ts-ignore The `getTargetRanges` property isn't recognized.\ntypeof globalThis.InputEvent.prototype.getTargetRanges === 'function';\n\n/**\r\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\r\n */\n\nvar useIsomorphicLayoutEffect = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\r\n * Leaf content strings.\r\n */\n\nvar String = props => {\n  var {\n    isLast,\n    leaf,\n    parent,\n    text\n  } = props;\n  var editor = useSlateStatic();\n  var path = ReactEditor.findPath(editor, text);\n  var parentPath = Path.parent(path); // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n\n  if (editor.isVoid(parent)) {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      length: Node.string(parent).length\n    });\n  } // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n\n\n  if (leaf.text === '' && parent.children[parent.children.length - 1] === text && !editor.isInline(parent) && Editor.string(editor, parentPath) === '') {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      isLineBreak: true\n    });\n  } // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n\n\n  if (leaf.text === '') {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, null);\n  } // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n\n\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return /*#__PURE__*/React.createElement(TextString, {\n      isTrailing: true,\n      text: leaf.text\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(TextString, {\n    text: leaf.text\n  });\n};\n/**\r\n * Leaf strings with text in them.\r\n */\n\n\nvar TextString = props => {\n  var {\n    text,\n    isTrailing = false\n  } = props;\n  var ref = useRef(null);\n\n  var getTextContent = () => {\n    return \"\".concat(text !== null && text !== void 0 ? text : '').concat(isTrailing ? '\\n' : '');\n  }; // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n  // useLayoutEffect: updating our span before browser paint\n\n\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    var textWithTrailing = getTextContent();\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing;\n    } // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n\n  }); // Render text content immediately if it's the first-time render\n  // Ensure that text content is rendered on server-side rendering\n\n  if (!ref.current) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      \"data-slate-string\": true,\n      ref: ref\n    }, getTextContent());\n  } // the span is intentionally same on every render in virtual DOM, actual rendering happens in the layout effect above\n\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-slate-string\": true,\n    ref: ref\n  });\n};\n/**\r\n * Leaf strings without text, render as zero-width strings.\r\n */\n\n\nvar ZeroWidthString = props => {\n  var {\n    length = 0,\n    isLineBreak = false\n  } = props;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-slate-zero-width\": isLineBreak ? 'n' : 'z',\n    \"data-slate-length\": length\n  }, '\\uFEFF', isLineBreak ? /*#__PURE__*/React.createElement(\"br\", null) : null);\n};\n\n/**\r\n * Two weak maps that allow us rebuild a path given a node. They are populated\r\n * at render time such that after a render occurs we can always backtrack.\r\n */\nvar NODE_TO_INDEX = new WeakMap();\nvar NODE_TO_PARENT = new WeakMap();\n/**\r\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\r\n * are used to resolve DOM event-related logic into Slate actions.\r\n */\n\nvar EDITOR_TO_WINDOW = new WeakMap();\nvar EDITOR_TO_ELEMENT = new WeakMap();\nvar ELEMENT_TO_NODE = new WeakMap();\nvar NODE_TO_ELEMENT = new WeakMap();\nvar NODE_TO_KEY = new WeakMap();\nvar EDITOR_TO_KEY_TO_ELEMENT = new WeakMap();\n/**\r\n * Weak maps for storing editor-related state.\r\n */\n\nvar IS_READ_ONLY = new WeakMap();\nvar IS_FOCUSED = new WeakMap();\nvar IS_COMPOSING = new WeakMap();\nvar IS_ON_COMPOSITION_END = new WeakMap();\nvar EDITOR_TO_USER_SELECTION = new WeakMap();\n/**\r\n * Weak maps for saving text on composition stage.\r\n */\n\nvar EDITOR_ON_COMPOSITION_TEXT = new WeakMap();\n/**\r\n * Weak map for associating the context `onChange` context with the plugin.\r\n */\n\nvar EDITOR_TO_ON_CHANGE = new WeakMap();\nvar NODE_TO_RESTORE_DOM = new WeakMap();\n/**\r\n * Symbols.\r\n */\n\nvar PLACEHOLDER_SYMBOL = Symbol('placeholder');\n\n/**\r\n * Individual leaves in a text node with unique formatting.\r\n */\n\nvar Leaf = props => {\n  var {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = props => /*#__PURE__*/React.createElement(DefaultLeaf, Object.assign({}, props))\n  } = props;\n  var placeholderRef = useRef(null);\n  useEffect(() => {\n    var placeholderEl = placeholderRef === null || placeholderRef === void 0 ? void 0 : placeholderRef.current;\n    var editorEl = document.querySelector('[data-slate-editor=\"true\"]');\n\n    if (!placeholderEl || !editorEl) {\n      return;\n    }\n\n    editorEl.style.minHeight = \"\".concat(placeholderEl.clientHeight, \"px\");\n    return () => {\n      editorEl.style.minHeight = 'auto';\n    };\n  }, [placeholderRef, leaf]);\n  var children = /*#__PURE__*/React.createElement(String, {\n    isLast: isLast,\n    leaf: leaf,\n    parent: parent,\n    text: text\n  });\n\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    var placeholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none'\n        },\n        contentEditable: false,\n        ref: placeholderRef\n      }\n    };\n    children = /*#__PURE__*/React.createElement(React.Fragment, null, renderPlaceholder(placeholderProps), children);\n  } // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n\n\n  var attributes = {\n    'data-slate-leaf': true\n  };\n  return renderLeaf({\n    attributes,\n    children,\n    leaf,\n    text\n  });\n};\n\nvar MemoizedLeaf = /*#__PURE__*/React.memo(Leaf, (prev, next) => {\n  return next.parent === prev.parent && next.isLast === prev.isLast && next.renderLeaf === prev.renderLeaf && next.renderPlaceholder === prev.renderPlaceholder && next.text === prev.text && Text$1.equals(next.leaf, prev.leaf) && next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL];\n});\nvar DefaultLeaf = props => {\n  var {\n    attributes,\n    children\n  } = props;\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes), children);\n};\n\nvar _excluded$3 = [\"anchor\", \"focus\"],\n    _excluded2 = [\"anchor\", \"focus\"];\nvar shallowCompare = (obj1, obj2) => Object.keys(obj1).length === Object.keys(obj2).length && Object.keys(obj1).every(key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]);\n/**\r\n * Check if a list of decorator ranges are equal to another.\r\n *\r\n * PERF: this requires the two lists to also have the ranges inside them in the\r\n * same order, but this is an okay constraint for us since decorations are\r\n * kept in order, and the odd case where they aren't is okay to re-render for.\r\n */\n\nvar isDecoratorRangeListEqual = (list, another) => {\n  if (list.length !== another.length) {\n    return false;\n  }\n\n  for (var i = 0; i < list.length; i++) {\n    var range = list[i];\n    var other = another[i];\n\n    var rangeOwnProps = _objectWithoutProperties(range, _excluded$3);\n\n    var otherOwnProps = _objectWithoutProperties(other, _excluded2);\n\n    if (!Range.equals(range, other) || range[PLACEHOLDER_SYMBOL] !== other[PLACEHOLDER_SYMBOL] || !shallowCompare(rangeOwnProps, otherOwnProps)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nfunction useContentKey(node) {\n  var contentKeyRef = useRef(0);\n  var updateAnimationFrameRef = useRef(null);\n  var [, setForceRerenderCounter] = useState(0);\n  useEffect(() => {\n    NODE_TO_RESTORE_DOM.set(node, () => {\n      // Update is already queued and node hasn't re-render yet\n      if (updateAnimationFrameRef.current) {\n        return;\n      }\n\n      updateAnimationFrameRef.current = requestAnimationFrame(() => {\n        setForceRerenderCounter(state => state + 1);\n        updateAnimationFrameRef.current = null;\n      });\n      contentKeyRef.current++;\n    });\n    return () => {\n      NODE_TO_RESTORE_DOM.delete(node);\n    };\n  }, [node]); // Node was restored => clear scheduled update\n\n  if (updateAnimationFrameRef.current) {\n    cancelAnimationFrame(updateAnimationFrameRef.current);\n    updateAnimationFrameRef.current = null;\n  }\n\n  return contentKeyRef.current;\n}\n\n/**\r\n * Text.\r\n */\n\nvar Text = props => {\n  var {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text\n  } = props;\n  var editor = useSlateStatic();\n  var ref = useRef(null);\n  var leaves = Text$1.decorations(text, decorations);\n  var key = ReactEditor.findKey(editor, text);\n  var children = [];\n\n  for (var i = 0; i < leaves.length; i++) {\n    var leaf = leaves[i];\n    children.push( /*#__PURE__*/React.createElement(MemoizedLeaf, {\n      isLast: isLast && i === leaves.length - 1,\n      key: \"\".concat(key.id, \"-\").concat(i),\n      renderPlaceholder: renderPlaceholder,\n      leaf: leaf,\n      text: text,\n      parent: parent,\n      renderLeaf: renderLeaf\n    }));\n  } // Update element-related weak maps with the DOM element ref.\n\n\n  useIsomorphicLayoutEffect(() => {\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n\n    if (ref.current) {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.set(key, ref.current);\n      NODE_TO_ELEMENT.set(text, ref.current);\n      ELEMENT_TO_NODE.set(ref.current, text);\n    } else {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.delete(key);\n      NODE_TO_ELEMENT.delete(text);\n    }\n  });\n  var contentKey = IS_ANDROID ? useContentKey(text) : undefined;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-slate-node\": \"text\",\n    ref: ref,\n    key: contentKey\n  }, children);\n};\n\nvar MemoizedText = /*#__PURE__*/React.memo(Text, (prev, next) => {\n  return next.parent === prev.parent && next.isLast === prev.isLast && next.renderLeaf === prev.renderLeaf && next.text === prev.text && isDecoratorRangeListEqual(next.decorations, prev.decorations);\n});\n\n/**\r\n * Element.\r\n */\n\nvar Element = props => {\n  var {\n    decorations,\n    element,\n    renderElement = p => /*#__PURE__*/React.createElement(DefaultElement, Object.assign({}, p)),\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  } = props;\n  var ref = useRef(null);\n  var editor = useSlateStatic();\n  var readOnly = useReadOnly();\n  var isInline = editor.isInline(element);\n  var key = ReactEditor.findKey(editor, element);\n  var children = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  }); // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n\n  var attributes = {\n    'data-slate-node': 'element',\n    ref\n  };\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true;\n  } // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n\n\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    var text = Node.string(element);\n    var dir = getDirection(text);\n\n    if (dir === 'rtl') {\n      attributes.dir = dir;\n    }\n  } // If it's a void node, wrap the children in extra void-specific elements.\n\n\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true;\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false;\n    }\n\n    var Tag = isInline ? 'span' : 'div';\n    var [[_text]] = Node.texts(element);\n    children = /*#__PURE__*/React.createElement(Tag, {\n      \"data-slate-spacer\": true,\n      style: {\n        height: '0',\n        color: 'transparent',\n        outline: 'none',\n        position: 'absolute'\n      }\n    }, /*#__PURE__*/React.createElement(MemoizedText, {\n      renderPlaceholder: renderPlaceholder,\n      decorations: [],\n      isLast: false,\n      parent: element,\n      text: _text\n    }));\n    NODE_TO_INDEX.set(_text, 0);\n    NODE_TO_PARENT.set(_text, element);\n  } // Update element-related weak maps with the DOM element ref.\n\n\n  useIsomorphicLayoutEffect(() => {\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n\n    if (ref.current) {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.set(key, ref.current);\n      NODE_TO_ELEMENT.set(element, ref.current);\n      ELEMENT_TO_NODE.set(ref.current, element);\n    } else {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.delete(key);\n      NODE_TO_ELEMENT.delete(element);\n    }\n  });\n  var content = renderElement({\n    attributes,\n    children,\n    element\n  });\n\n  if (IS_ANDROID) {\n    var contentKey = useContentKey(element);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: contentKey\n    }, content);\n  }\n\n  return content;\n};\n\nvar MemoizedElement = /*#__PURE__*/React.memo(Element, (prev, next) => {\n  return prev.element === next.element && prev.renderElement === next.renderElement && prev.renderLeaf === next.renderLeaf && isDecoratorRangeListEqual(prev.decorations, next.decorations) && (prev.selection === next.selection || !!prev.selection && !!next.selection && Range.equals(prev.selection, next.selection));\n});\n/**\r\n * The default element renderer.\r\n */\n\nvar DefaultElement = props => {\n  var {\n    attributes,\n    children,\n    element\n  } = props;\n  var editor = useSlateStatic();\n  var Tag = editor.isInline(element) ? 'span' : 'div';\n  return /*#__PURE__*/React.createElement(Tag, Object.assign({}, attributes, {\n    style: {\n      position: 'relative'\n    }\n  }), children);\n};\n\n/**\r\n * A React context for sharing the editor object.\r\n */\n\nvar EditorContext = /*#__PURE__*/createContext(null);\n/**\r\n * Get the current editor object from the React context.\r\n */\n\nvar useSlateStatic = () => {\n  var editor = useContext(EditorContext);\n\n  if (!editor) {\n    throw new Error(\"The `useSlateStatic` hook must be used inside the <Slate> component's context.\");\n  }\n\n  return editor;\n};\n\n/**\r\n * A React context for sharing the `selected` state of an element.\r\n */\n\nvar SelectedContext = /*#__PURE__*/createContext(false);\n/**\r\n * Get the current `selected` state of an element.\r\n */\n\nvar useSelected = () => {\n  return useContext(SelectedContext);\n};\n\n/**\r\n * Children.\r\n */\n\nvar useChildren = props => {\n  var {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  } = props;\n  var editor = useSlateStatic();\n  var path = ReactEditor.findPath(editor, node);\n  var children = [];\n  var isLeafBlock = Element$1.isElement(node) && !editor.isInline(node) && Editor.hasInlines(editor, node);\n\n  var _loop = function _loop(i) {\n    var p = path.concat(i);\n    var n = node.children[i];\n    var key = ReactEditor.findKey(editor, n);\n    var range = Editor.range(editor, p);\n    var sel = selection && Range.intersection(range, selection);\n    var ds = decorations.reduce((acc, dec) => {\n      var intersection = Range.intersection(dec, range);\n      if (intersection) acc.push(intersection);\n      return acc;\n    }, []);\n\n    if (Element$1.isElement(n)) {\n      children.push( /*#__PURE__*/React.createElement(SelectedContext.Provider, {\n        key: \"provider-\".concat(key.id),\n        value: !!sel\n      }, /*#__PURE__*/React.createElement(MemoizedElement, {\n        decorations: ds,\n        element: n,\n        key: key.id,\n        renderElement: renderElement,\n        renderPlaceholder: renderPlaceholder,\n        renderLeaf: renderLeaf,\n        selection: sel\n      })));\n    } else {\n      children.push( /*#__PURE__*/React.createElement(MemoizedText, {\n        decorations: ds,\n        key: key.id,\n        isLast: isLeafBlock && i === node.children.length - 1,\n        parent: node,\n        renderPlaceholder: renderPlaceholder,\n        renderLeaf: renderLeaf,\n        text: n\n      }));\n    }\n\n    NODE_TO_INDEX.set(n, i);\n    NODE_TO_PARENT.set(n, node);\n  };\n\n  for (var i = 0; i < node.children.length; i++) {\n    _loop(i);\n  }\n\n  return children;\n};\n\n/**\r\n * Hotkey mappings for each platform.\r\n */\n\nvar HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z'\n};\nvar APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t'\n};\nvar WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z']\n};\n/**\r\n * Create a platform-aware hotkey checker.\r\n */\n\nvar create = key => {\n  var generic = HOTKEYS[key];\n  var apple = APPLE_HOTKEYS[key];\n  var windows = WINDOWS_HOTKEYS[key];\n  var isGeneric = generic && isKeyHotkey(generic);\n  var isApple = apple && isKeyHotkey(apple);\n  var isWindows = windows && isKeyHotkey(windows);\n  return event => {\n    if (isGeneric && isGeneric(event)) return true;\n    if (IS_APPLE && isApple && isApple(event)) return true;\n    if (!IS_APPLE && isWindows && isWindows(event)) return true;\n    return false;\n  };\n};\n/**\r\n * Hotkeys.\r\n */\n\n\nvar Hotkeys = {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo')\n};\n\n/**\r\n * A React context for sharing the `readOnly` state of the editor.\r\n */\n\nvar ReadOnlyContext = /*#__PURE__*/createContext(false);\n/**\r\n * Get the current `readOnly` state of the editor.\r\n */\n\nvar useReadOnly = () => {\n  return useContext(ReadOnlyContext);\n};\n\n/**\r\n * A React context for sharing the editor object, in a way that re-renders the\r\n * context whenever changes occur.\r\n */\n\nvar SlateContext = /*#__PURE__*/createContext(null);\n/**\r\n * Get the current editor object from the React context.\r\n */\n\nvar useSlate = () => {\n  var context = useContext(SlateContext);\n\n  if (!context) {\n    throw new Error(\"The `useSlate` hook must be used inside the <Slate> component's context.\");\n  }\n\n  var [editor] = context;\n  return editor;\n};\n\n/**\r\n * A React context for sharing the `decorate` prop of the editable.\r\n */\n\nvar DecorateContext = /*#__PURE__*/createContext(() => []);\n\n/**\r\n * Types.\r\n */\n/**\r\n * Returns the host window of a DOM node\r\n */\n\nvar getDefaultView = value => {\n  return value && value.ownerDocument && value.ownerDocument.defaultView || null;\n};\n/**\r\n * Check if a DOM node is a comment node.\r\n */\n\nvar isDOMComment = value => {\n  return isDOMNode(value) && value.nodeType === 8;\n};\n/**\r\n * Check if a DOM node is an element node.\r\n */\n\nvar isDOMElement = value => {\n  return isDOMNode(value) && value.nodeType === 1;\n};\n/**\r\n * Check if a value is a DOM node.\r\n */\n\nvar isDOMNode = value => {\n  var window = getDefaultView(value);\n  return !!window && value instanceof window.Node;\n};\n/**\r\n * Check if a value is a DOM selection.\r\n */\n\nvar isDOMSelection = value => {\n  var window = value && value.anchorNode && getDefaultView(value.anchorNode);\n  return !!window && value instanceof window.Selection;\n};\n/**\r\n * Check if a DOM node is an element node.\r\n */\n\nvar isDOMText = value => {\n  return isDOMNode(value) && value.nodeType === 3;\n};\n/**\r\n * Checks whether a paste event is a plaintext-only event.\r\n */\n\nvar isPlainTextOnlyPaste = event => {\n  return event.clipboardData && event.clipboardData.getData('text/plain') !== '' && event.clipboardData.types.length === 1;\n};\n/**\r\n * Normalize a DOM point so that it always refers to a text node.\r\n */\n\nvar normalizeDOMPoint = domPoint => {\n  var [node, offset] = domPoint; // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n\n  if (isDOMElement(node) && node.childNodes.length) {\n    var isLast = offset === node.childNodes.length;\n    var index = isLast ? offset - 1 : offset;\n    [node, index] = getEditableChildAndIndex(node, index, isLast ? 'backward' : 'forward'); // If the editable child found is in front of input offset, we instead seek to its end\n\n    isLast = index < offset; // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n\n    while (isDOMElement(node) && node.childNodes.length) {\n      var i = isLast ? node.childNodes.length - 1 : 0;\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward');\n    } // Determine the new offset inside the text node.\n\n\n    offset = isLast && node.textContent != null ? node.textContent.length : 0;\n  } // Return the node and offset.\n\n\n  return [node, offset];\n};\n/**\r\n * Determines wether the active element is nested within a shadowRoot\r\n */\n\nvar hasShadowRoot = () => {\n  return !!(window.document.activeElement && window.document.activeElement.shadowRoot);\n};\n/**\r\n * Get the nearest editable child and index at `index` in a `parent`, preferring\r\n * `direction`.\r\n */\n\nvar getEditableChildAndIndex = (parent, index, direction) => {\n  var {\n    childNodes\n  } = parent;\n  var child = childNodes[index];\n  var i = index;\n  var triedForward = false;\n  var triedBackward = false; // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n\n  while (isDOMComment(child) || isDOMElement(child) && child.childNodes.length === 0 || isDOMElement(child) && child.getAttribute('contenteditable') === 'false') {\n    if (triedForward && triedBackward) {\n      break;\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true;\n      i = index - 1;\n      direction = 'backward';\n      continue;\n    }\n\n    if (i < 0) {\n      triedBackward = true;\n      i = index + 1;\n      direction = 'forward';\n      continue;\n    }\n\n    child = childNodes[i];\n    index = i;\n    i += direction === 'forward' ? 1 : -1;\n  }\n\n  return [child, index];\n};\n/**\r\n * Get the nearest editable child at `index` in a `parent`, preferring\r\n * `direction`.\r\n */\n\nvar getEditableChild = (parent, index, direction) => {\n  var [child] = getEditableChildAndIndex(parent, index, direction);\n  return child;\n};\n/**\r\n * Get a plaintext representation of the content of a node, accounting for block\r\n * elements which get a newline appended.\r\n *\r\n * The domNode must be attached to the DOM.\r\n */\n\nvar getPlainText = domNode => {\n  var text = '';\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue;\n  }\n\n  if (isDOMElement(domNode)) {\n    for (var childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode);\n    }\n\n    var display = getComputedStyle(domNode).getPropertyValue('display');\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n';\n    }\n  }\n\n  return text;\n};\n/**\r\n * Get x-slate-fragment attribute from data-slate-fragment\r\n */\n\nvar catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m;\nvar getSlateFragmentAttribute = dataTransfer => {\n  var htmlData = dataTransfer.getData('text/html');\n  var [, fragment] = htmlData.match(catchSlateFragment) || [];\n  return fragment;\n};\n/**\r\n * Get the x-slate-fragment attribute that exist in text/html data\r\n * and append it to the DataTransfer object\r\n */\n\nvar getClipboardData = dataTransfer => {\n  if (!dataTransfer.getData('application/x-slate-fragment')) {\n    var fragment = getSlateFragmentAttribute(dataTransfer);\n\n    if (fragment) {\n      var clipboardData = new DataTransfer();\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type));\n      });\n      clipboardData.setData('application/x-slate-fragment', fragment);\n      return clipboardData;\n    }\n  }\n\n  return dataTransfer;\n};\n\nvar TRIPLE_CLICK = 3;\n\nvar _excluded$2 = [\"autoFocus\", \"decorate\", \"onDOMBeforeInput\", \"placeholder\", \"readOnly\", \"renderElement\", \"renderLeaf\", \"renderPlaceholder\", \"scrollSelectionIntoView\", \"style\", \"as\"];\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Children = props => /*#__PURE__*/React.createElement(React.Fragment, null, useChildren(props));\n/**\r\n * Editable.\r\n */\n\n\nvar Editable$1 = props => {\n  var {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => /*#__PURE__*/React.createElement(DefaultPlaceholder, Object.assign({}, props)),\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style = {},\n    as: Component = 'div'\n  } = props,\n      attributes = _objectWithoutProperties(props, _excluded$2);\n\n  var editor = useSlate(); // Rerender editor when composition status changed\n\n  var [isComposing, setIsComposing] = useState(false);\n  var ref = useRef(null);\n  var deferredOperations = useRef([]); // Update internal state on each render.\n\n  IS_READ_ONLY.set(editor, readOnly); // Keep track of some state for the event handler logic.\n\n  var state = useMemo(() => ({\n    hasInsertPrefixInCompositon: false,\n    isDraggingInternally: false,\n    isUpdatingSelection: false,\n    latestElement: null\n  }), []); // Whenever the editor updates...\n\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    var window;\n\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window);\n      EDITOR_TO_ELEMENT.set(editor, ref.current);\n      NODE_TO_ELEMENT.set(editor, ref.current);\n      ELEMENT_TO_NODE.set(ref.current, editor);\n    } else {\n      NODE_TO_ELEMENT.delete(editor);\n    } // Make sure the DOM selection state is in sync.\n\n\n    var {\n      selection\n    } = editor;\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    var domSelection = root.getSelection();\n\n    if (ReactEditor.isComposing(editor) || !domSelection || !ReactEditor.isFocused(editor)) {\n      return;\n    }\n\n    var hasDomSelection = domSelection.type !== 'None'; // If the DOM selection is properly unset, we're done.\n\n    if (!selection && !hasDomSelection) {\n      return;\n    } // verify that the dom selection is in the editor\n\n\n    var editorElement = EDITOR_TO_ELEMENT.get(editor);\n    var hasDomSelectionInEditor = false;\n\n    if (editorElement.contains(domSelection.anchorNode) && editorElement.contains(domSelection.focusNode)) {\n      hasDomSelectionInEditor = true;\n    } // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n\n\n    if (hasDomSelection && hasDomSelectionInEditor && selection) {\n      var slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: true,\n        // domSelection is not necessarily a valid Slate range\n        // (e.g. when clicking on contentEditable:false element)\n        suppressThrow: true\n      });\n\n      if (slateRange && Range.equals(slateRange, selection)) {\n        return;\n      }\n    } // when <Editable/> is being controlled through external value\n    // then its children might just change - DOM responds to it on its own\n    // but Slate's value is not being updated through any operation\n    // and thus it doesn't transform selection on its own\n\n\n    if (selection && !ReactEditor.hasRange(editor, selection)) {\n      editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: false\n      });\n      return;\n    } // Otherwise the DOM selection is out of sync, so update it.\n\n\n    state.isUpdatingSelection = true;\n    var newDomRange = selection && ReactEditor.toDOMRange(editor, selection);\n\n    if (newDomRange) {\n      if (Range.isBackward(selection)) {\n        domSelection.setBaseAndExtent(newDomRange.endContainer, newDomRange.endOffset, newDomRange.startContainer, newDomRange.startOffset);\n      } else {\n        domSelection.setBaseAndExtent(newDomRange.startContainer, newDomRange.startOffset, newDomRange.endContainer, newDomRange.endOffset);\n      }\n\n      scrollSelectionIntoView(editor, newDomRange);\n    } else {\n      domSelection.removeAllRanges();\n    }\n\n    setTimeout(() => {\n      // COMPAT: In Firefox, it's not enough to create a range, you also need\n      // to focus the contenteditable element too. (2016/11/16)\n      if (newDomRange && IS_FIREFOX) {\n        var el = ReactEditor.toDOMNode(editor, editor);\n        el.focus();\n      }\n\n      state.isUpdatingSelection = false;\n    });\n  }); // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus();\n    }\n  }, [autoFocus]); // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n\n  var onDOMSelectionChange = useCallback(throttle(() => {\n    if (!ReactEditor.isComposing(editor) && !state.isUpdatingSelection && !state.isDraggingInternally) {\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n      var {\n        activeElement\n      } = root;\n      var el = ReactEditor.toDOMNode(editor, editor);\n      var domSelection = root.getSelection();\n\n      if (activeElement === el) {\n        state.latestElement = activeElement;\n        IS_FOCUSED.set(editor, true);\n      } else {\n        IS_FOCUSED.delete(editor);\n      }\n\n      if (!domSelection) {\n        return Transforms.deselect(editor);\n      }\n\n      var {\n        anchorNode,\n        focusNode\n      } = domSelection;\n      var anchorNodeSelectable = hasEditableTarget(editor, anchorNode) || isTargetInsideNonReadonlyVoid(editor, anchorNode);\n      var focusNodeSelectable = hasEditableTarget(editor, focusNode) || isTargetInsideNonReadonlyVoid(editor, focusNode);\n\n      if (anchorNodeSelectable && focusNodeSelectable) {\n        var range = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: false\n        });\n        Transforms.select(editor, range);\n      }\n    }\n  }, 100), [readOnly]);\n  var scheduleOnDOMSelectionChange = useMemo(() => debounce(onDOMSelectionChange, 0), [onDOMSelectionChange]); // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n\n  var onDOMBeforeInput = useCallback(event => {\n    if (!readOnly && hasEditableTarget(editor, event.target) && !isDOMEventHandled(event, propsOnDOMBeforeInput)) {\n      var _EDITOR_TO_USER_SELEC;\n\n      // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n      // triggering a `beforeinput` expecting the change to be applied to the immediately before\n      // set selection.\n      scheduleOnDOMSelectionChange.flush();\n      onDOMSelectionChange.flush();\n      var {\n        selection\n      } = editor;\n      var {\n        inputType: type\n      } = event;\n      var data = event.dataTransfer || event.data || undefined; // These two types occur while a user is composing text and can't be\n      // cancelled. Let them through and wait for the composition to end.\n\n      if (type === 'insertCompositionText' || type === 'deleteCompositionText') {\n        return;\n      }\n\n      var native = false;\n\n      if (type === 'insertText' && selection && Range.isCollapsed(selection) && // Only use native character insertion for single characters a-z or space for now.\n      // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n      // causes duplicate inserts.\n      event.data && event.data.length === 1 && /[a-z ]/i.test(event.data) && // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n      // When there is an inline element, e.g. a link, and you select\n      // right after it (the start of the next node).\n      selection.anchor.offset !== 0) {\n        var _node$parentElement;\n\n        native = true; // Skip native if there are marks, as\n        // `insertText` will insert a node, not just text.\n\n        if (editor.marks) {\n          native = false;\n        } // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n        // Therefore we don't allow native events to insert text at the end of anchor nodes.\n\n\n        var {\n          anchor\n        } = selection;\n        var [node, offset] = ReactEditor.toDOMPoint(editor, anchor);\n        var anchorNode = (_node$parentElement = node.parentElement) === null || _node$parentElement === void 0 ? void 0 : _node$parentElement.closest('a');\n\n        if (anchorNode && ReactEditor.hasDOMNode(editor, anchorNode)) {\n          var _lastText$textContent;\n\n          var {\n            document\n          } = ReactEditor.getWindow(editor); // Find the last text node inside the anchor.\n\n          var lastText = document.createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT).lastChild();\n\n          if (lastText === node && ((_lastText$textContent = lastText.textContent) === null || _lastText$textContent === void 0 ? void 0 : _lastText$textContent.length) === offset) {\n            native = false;\n          }\n        }\n      } // COMPAT: For the deleting forward/backward input types we don't want\n      // to change the selection because it is the range that will be deleted,\n      // and those commands determine that for themselves.\n\n\n      if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n        var [targetRange] = event.getTargetRanges();\n\n        if (targetRange) {\n          var range = ReactEditor.toSlateRange(editor, targetRange, {\n            exactMatch: false,\n            suppressThrow: false\n          });\n\n          if (!selection || !Range.equals(selection, range)) {\n            native = false;\n            var selectionRef = editor.selection && Editor.rangeRef(editor, editor.selection);\n            Transforms.select(editor, range);\n\n            if (selectionRef) {\n              EDITOR_TO_USER_SELECTION.set(editor, selectionRef);\n            }\n          }\n        }\n      }\n\n      if (!native) {\n        event.preventDefault();\n      } // COMPAT: If the selection is expanded, even if the command seems like\n      // a delete forward/backward command it should delete the selection.\n\n\n      if (selection && Range.isExpanded(selection) && type.startsWith('delete')) {\n        var direction = type.endsWith('Backward') ? 'backward' : 'forward';\n        Editor.deleteFragment(editor, {\n          direction\n        });\n        return;\n      }\n\n      switch (type) {\n        case 'deleteByComposition':\n        case 'deleteByCut':\n        case 'deleteByDrag':\n          {\n            Editor.deleteFragment(editor);\n            break;\n          }\n\n        case 'deleteContent':\n        case 'deleteContentForward':\n          {\n            Editor.deleteForward(editor);\n            break;\n          }\n\n        case 'deleteContentBackward':\n          {\n            Editor.deleteBackward(editor);\n            break;\n          }\n\n        case 'deleteEntireSoftLine':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n\n        case 'deleteHardLineBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'block'\n            });\n            break;\n          }\n\n        case 'deleteSoftLineBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n\n        case 'deleteHardLineForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'block'\n            });\n            break;\n          }\n\n        case 'deleteSoftLineForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n\n        case 'deleteWordBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'word'\n            });\n            break;\n          }\n\n        case 'deleteWordForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'word'\n            });\n            break;\n          }\n\n        case 'insertLineBreak':\n          Editor.insertSoftBreak(editor);\n          break;\n\n        case 'insertParagraph':\n          {\n            Editor.insertBreak(editor);\n            break;\n          }\n\n        case 'insertFromComposition':\n        case 'insertFromDrop':\n        case 'insertFromPaste':\n        case 'insertFromYank':\n        case 'insertReplacementText':\n        case 'insertText':\n          {\n            var {\n              selection: _selection\n            } = editor;\n\n            if (_selection) {\n              if (Range.isExpanded(_selection)) {\n                Editor.deleteFragment(editor);\n              }\n            }\n\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false);\n                IS_COMPOSING.set(editor, false);\n              }\n            } // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n\n\n            if ((data === null || data === void 0 ? void 0 : data.constructor.name) === 'DataTransfer') {\n              ReactEditor.insertData(editor, data);\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() => Editor.insertText(editor, data));\n              } else {\n                Editor.insertText(editor, data);\n              }\n            }\n\n            break;\n          }\n      } // Restore the actual user section if nothing manually set it.\n\n\n      var toRestore = (_EDITOR_TO_USER_SELEC = EDITOR_TO_USER_SELECTION.get(editor)) === null || _EDITOR_TO_USER_SELEC === void 0 ? void 0 : _EDITOR_TO_USER_SELEC.unref();\n      EDITOR_TO_USER_SELECTION.delete(editor);\n\n      if (toRestore && (!editor.selection || !Range.equals(editor.selection, toRestore))) {\n        Transforms.select(editor, toRestore);\n      }\n    }\n  }, [readOnly, propsOnDOMBeforeInput]); // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput);\n    }\n\n    return () => {\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput);\n      }\n    };\n  }, [onDOMBeforeInput]); // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n\n  useIsomorphicLayoutEffect(() => {\n    var window = ReactEditor.getWindow(editor);\n    window.document.addEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    return () => {\n      window.document.removeEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    };\n  }, [scheduleOnDOMSelectionChange]);\n  var decorations = [...Node.nodes(editor)].flatMap(_ref => {\n    var [n, p] = _ref;\n    return decorate([n, p]);\n  });\n\n  if (placeholder && editor.children.length === 1 && Array.from(Node.texts(editor)).length === 1 && Node.string(editor) === '' && !isComposing) {\n    var start = Editor.start(editor, []);\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ReadOnlyContext.Provider, {\n    value: readOnly\n  }, /*#__PURE__*/React.createElement(DecorateContext.Provider, {\n    value: decorate\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({\n    role: readOnly ? undefined : 'textbox'\n  }, attributes, {\n    // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n    // have to use hacks to make these replacement-based features work.\n    // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n    // mismatch warning app moves to browser. Pass-through consumer props when\n    // not CAN_USE_DOM (SSR) and default to falsy value\n    spellCheck: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.spellCheck : false,\n    autoCorrect: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.autoCorrect : 'false',\n    autoCapitalize: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.autoCapitalize : 'false',\n    \"data-slate-editor\": true,\n    \"data-slate-node\": \"value\",\n    // explicitly set this\n    contentEditable: !readOnly,\n    // in some cases, a decoration needs access to the range / selection to decorate a text node,\n    // then you will select the whole text node when you select part the of text\n    // this magic zIndex=\"-1\" will fix it\n    zindex: -1,\n    suppressContentEditableWarning: true,\n    ref: ref,\n    style: _objectSpread$1({\n      // Allow positioning relative to the editable element.\n      position: 'relative',\n      // Prevent the default outline styles.\n      outline: 'none',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word'\n    }, style),\n    onBeforeInput: useCallback(event => {\n      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n      // fall back to React's leaky polyfill instead just for it. It\n      // only works for the `insertText` input type.\n      if (!HAS_BEFORE_INPUT_SUPPORT && !readOnly && !isEventHandled(event, attributes.onBeforeInput) && hasEditableTarget(editor, event.target)) {\n        event.preventDefault();\n\n        if (!ReactEditor.isComposing(editor)) {\n          var text = event.data;\n          Editor.insertText(editor, text);\n        }\n      }\n    }, [readOnly]),\n    onInput: useCallback(event => {\n      // Flush native operations, as native events will have propogated\n      // and we can correctly compare DOM text values in components\n      // to stop rendering, so that browser functions like autocorrect\n      // and spellcheck work as expected.\n      for (var op of deferredOperations.current) {\n        op();\n      }\n\n      deferredOperations.current = [];\n    }, []),\n    onBlur: useCallback(event => {\n      if (readOnly || state.isUpdatingSelection || !hasEditableTarget(editor, event.target) || isEventHandled(event, attributes.onBlur)) {\n        return;\n      } // COMPAT: If the current `activeElement` is still the previous\n      // one, this is due to the window being blurred when the tab\n      // itself becomes unfocused, so we want to abort early to allow to\n      // editor to stay focused when the tab becomes focused again.\n\n\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n\n      if (state.latestElement === root.activeElement) {\n        return;\n      }\n\n      var {\n        relatedTarget\n      } = event;\n      var el = ReactEditor.toDOMNode(editor, editor); // COMPAT: The event should be ignored if the focus is returning\n      // to the editor from an embedded editable element (eg. an <input>\n      // element inside a void node).\n\n      if (relatedTarget === el) {\n        return;\n      } // COMPAT: The event should be ignored if the focus is moving from\n      // the editor to inside a void node's spacer element.\n\n\n      if (isDOMElement(relatedTarget) && relatedTarget.hasAttribute('data-slate-spacer')) {\n        return;\n      } // COMPAT: The event should be ignored if the focus is moving to a\n      // non- editable section of an element that isn't a void node (eg.\n      // a list item of the check list example).\n\n\n      if (relatedTarget != null && isDOMNode(relatedTarget) && ReactEditor.hasDOMNode(editor, relatedTarget)) {\n        var node = ReactEditor.toSlateNode(editor, relatedTarget);\n\n        if (Element$1.isElement(node) && !editor.isVoid(node)) {\n          return;\n        }\n      } // COMPAT: Safari doesn't always remove the selection even if the content-\n      // editable element no longer has focus. Refer to:\n      // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n\n\n      if (IS_SAFARI) {\n        var domSelection = root.getSelection();\n        domSelection === null || domSelection === void 0 ? void 0 : domSelection.removeAllRanges();\n      }\n\n      IS_FOCUSED.delete(editor);\n    }, [readOnly, attributes.onBlur]),\n    onClick: useCallback(event => {\n      if (hasTarget(editor, event.target) && !isEventHandled(event, attributes.onClick) && isDOMNode(event.target)) {\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        var path = ReactEditor.findPath(editor, node); // At this time, the Slate document may be arbitrarily different,\n        // because onClick handlers can change the document before we get here.\n        // Therefore we must check that this path actually exists,\n        // and that it still refers to the same node.\n\n        if (!Editor.hasPath(editor, path) || Node.get(editor, path) !== node) {\n          return;\n        }\n\n        if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n          var blockPath = path;\n\n          if (!Editor.isBlock(editor, node)) {\n            var _block$;\n\n            var block = Editor.above(editor, {\n              match: n => Editor.isBlock(editor, n),\n              at: path\n            });\n            blockPath = (_block$ = block === null || block === void 0 ? void 0 : block[1]) !== null && _block$ !== void 0 ? _block$ : path.slice(0, 1);\n          }\n\n          var range = Editor.range(editor, blockPath);\n          Transforms.select(editor, range);\n          return;\n        }\n\n        if (readOnly) {\n          return;\n        }\n\n        var _start = Editor.start(editor, path);\n\n        var end = Editor.end(editor, path);\n        var startVoid = Editor.void(editor, {\n          at: _start\n        });\n        var endVoid = Editor.void(editor, {\n          at: end\n        });\n\n        if (startVoid && endVoid && Path.equals(startVoid[1], endVoid[1])) {\n          var _range = Editor.range(editor, _start);\n\n          Transforms.select(editor, _range);\n        }\n      }\n    }, [readOnly, attributes.onClick]),\n    onCompositionEnd: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCompositionEnd)) {\n        if (ReactEditor.isComposing(editor)) {\n          setIsComposing(false);\n          IS_COMPOSING.set(editor, false);\n        } // COMPAT: In Chrome, `beforeinput` events for compositions\n        // aren't correct and never fire the \"insertFromComposition\"\n        // type that we need. So instead, insert whenever a composition\n        // ends since it will already have been committed to the DOM.\n\n\n        if (!IS_SAFARI && !IS_FIREFOX_LEGACY && !IS_IOS && !IS_QQBROWSER && !IS_WECHATBROWSER && !IS_UC_MOBILE && event.data) {\n          Editor.insertText(editor, event.data);\n        }\n\n        if (editor.selection && Range.isCollapsed(editor.selection)) {\n          var leafPath = editor.selection.anchor.path;\n          var currentTextNode = Node.leaf(editor, leafPath);\n\n          if (state.hasInsertPrefixInCompositon) {\n            state.hasInsertPrefixInCompositon = false;\n            Editor.withoutNormalizing(editor, () => {\n              // remove Unicode BOM prefix added in `onCompositionStart`\n              var text = currentTextNode.text.replace(/^\\uFEFF/, '');\n              Transforms.delete(editor, {\n                distance: currentTextNode.text.length,\n                reverse: true\n              });\n              Editor.insertText(editor, text);\n            });\n          }\n        }\n      }\n    }, [attributes.onCompositionEnd]),\n    onCompositionUpdate: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCompositionUpdate)) {\n        if (!ReactEditor.isComposing(editor)) {\n          setIsComposing(true);\n          IS_COMPOSING.set(editor, true);\n        }\n      }\n    }, [attributes.onCompositionUpdate]),\n    onCompositionStart: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCompositionStart)) {\n        var {\n          selection,\n          marks\n        } = editor;\n\n        if (selection) {\n          if (Range.isExpanded(selection)) {\n            Editor.deleteFragment(editor);\n            return;\n          }\n\n          var inline = Editor.above(editor, {\n            match: n => Editor.isInline(editor, n),\n            mode: 'highest'\n          });\n\n          if (inline) {\n            var [, inlinePath] = inline;\n\n            if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n              var point = Editor.after(editor, inlinePath);\n              Transforms.setSelection(editor, {\n                anchor: point,\n                focus: point\n              });\n            }\n          } // insert new node in advance to ensure composition text will insert\n          // along with final input text\n          // add Unicode BOM prefix to avoid normalize removing this node\n\n\n          if (marks) {\n            state.hasInsertPrefixInCompositon = true;\n            Transforms.insertNodes(editor, _objectSpread$1({\n              text: '\\uFEFF'\n            }, marks), {\n              select: true\n            });\n          }\n        }\n      }\n    }, [attributes.onCompositionStart]),\n    onCopy: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCopy)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'copy');\n      }\n    }, [attributes.onCopy]),\n    onCut: useCallback(event => {\n      if (!readOnly && hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCut)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'cut');\n        var {\n          selection\n        } = editor;\n\n        if (selection) {\n          if (Range.isExpanded(selection)) {\n            Editor.deleteFragment(editor);\n          } else {\n            var node = Node.parent(editor, selection.anchor.path);\n\n            if (Editor.isVoid(editor, node)) {\n              Transforms.delete(editor);\n            }\n          }\n        }\n      }\n    }, [readOnly, attributes.onCut]),\n    onDragOver: useCallback(event => {\n      if (hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDragOver)) {\n        // Only when the target is void, call `preventDefault` to signal\n        // that drops are allowed. Editable content is droppable by\n        // default, and calling `preventDefault` hides the cursor.\n        var node = ReactEditor.toSlateNode(editor, event.target);\n\n        if (Editor.isVoid(editor, node)) {\n          event.preventDefault();\n        }\n      }\n    }, [attributes.onDragOver]),\n    onDragStart: useCallback(event => {\n      if (!readOnly && hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDragStart)) {\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        var path = ReactEditor.findPath(editor, node);\n        var voidMatch = Editor.isVoid(editor, node) || Editor.void(editor, {\n          at: path,\n          voids: true\n        }); // If starting a drag on a void node, make sure it is selected\n        // so that it shows up in the selection's fragment.\n\n        if (voidMatch) {\n          var range = Editor.range(editor, path);\n          Transforms.select(editor, range);\n        }\n\n        state.isDraggingInternally = true;\n        ReactEditor.setFragmentData(editor, event.dataTransfer, 'drag');\n      }\n    }, [readOnly, attributes.onDragStart]),\n    onDrop: useCallback(event => {\n      if (!readOnly && hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDrop)) {\n        event.preventDefault(); // Keep a reference to the dragged range before updating selection\n\n        var draggedRange = editor.selection; // Find the range where the drop happened\n\n        var range = ReactEditor.findEventRange(editor, event);\n        var data = event.dataTransfer;\n        Transforms.select(editor, range);\n\n        if (state.isDraggingInternally) {\n          if (draggedRange && !Range.equals(draggedRange, range) && !Editor.void(editor, {\n            at: range,\n            voids: true\n          })) {\n            Transforms.delete(editor, {\n              at: draggedRange\n            });\n          }\n        }\n\n        ReactEditor.insertData(editor, data); // When dragging from another source into the editor, it's possible\n        // that the current editor does not have focus.\n\n        if (!ReactEditor.isFocused(editor)) {\n          ReactEditor.focus(editor);\n        }\n      }\n\n      state.isDraggingInternally = false;\n    }, [readOnly, attributes.onDrop]),\n    onDragEnd: useCallback(event => {\n      if (!readOnly && state.isDraggingInternally && attributes.onDragEnd && hasTarget(editor, event.target)) {\n        attributes.onDragEnd(event);\n      } // When dropping on a different droppable element than the current editor,\n      // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n      // Note: `onDragEnd` is only called when `onDrop` is not called\n\n\n      state.isDraggingInternally = false;\n    }, [readOnly, attributes.onDragEnd]),\n    onFocus: useCallback(event => {\n      if (!readOnly && !state.isUpdatingSelection && hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onFocus)) {\n        var el = ReactEditor.toDOMNode(editor, editor);\n        var root = ReactEditor.findDocumentOrShadowRoot(editor);\n        state.latestElement = root.activeElement; // COMPAT: If the editor has nested editable elements, the focus\n        // can go to them. In Firefox, this must be prevented because it\n        // results in issues with keyboard navigation. (2017/03/30)\n\n        if (IS_FIREFOX && event.target !== el) {\n          el.focus();\n          return;\n        }\n\n        IS_FOCUSED.set(editor, true);\n      }\n    }, [readOnly, attributes.onFocus]),\n    onKeyDown: useCallback(event => {\n      if (!readOnly && hasEditableTarget(editor, event.target)) {\n        var {\n          nativeEvent\n        } = event; // COMPAT: The composition end event isn't fired reliably in all browsers,\n        // so we sometimes might end up stuck in a composition state even though we\n        // aren't composing any more.\n\n        if (ReactEditor.isComposing(editor) && nativeEvent.isComposing === false) {\n          IS_COMPOSING.set(editor, false);\n          setIsComposing(false);\n        }\n\n        if (isEventHandled(event, attributes.onKeyDown) || ReactEditor.isComposing(editor)) {\n          return;\n        }\n\n        var {\n          selection\n        } = editor;\n        var element = editor.children[selection !== null ? selection.focus.path[0] : 0];\n        var isRTL = getDirection(Node.string(element)) === 'rtl'; // COMPAT: Since we prevent the default behavior on\n        // `beforeinput` events, the browser doesn't think there's ever\n        // any history stack to undo or redo, so we have to manage these\n        // hotkeys ourselves. (2019/11/06)\n\n        if (Hotkeys.isRedo(nativeEvent)) {\n          event.preventDefault();\n          var maybeHistoryEditor = editor;\n\n          if (typeof maybeHistoryEditor.redo === 'function') {\n            maybeHistoryEditor.redo();\n          }\n\n          return;\n        }\n\n        if (Hotkeys.isUndo(nativeEvent)) {\n          event.preventDefault();\n          var _maybeHistoryEditor = editor;\n\n          if (typeof _maybeHistoryEditor.undo === 'function') {\n            _maybeHistoryEditor.undo();\n          }\n\n          return;\n        } // COMPAT: Certain browsers don't handle the selection updates\n        // properly. In Chrome, the selection isn't properly extended.\n        // And in Firefox, the selection isn't properly collapsed.\n        // (2017/10/17)\n\n\n        if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            reverse: true\n          });\n          return;\n        }\n\n        if (Hotkeys.isMoveLineForward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line'\n          });\n          return;\n        }\n\n        if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            edge: 'focus',\n            reverse: true\n          });\n          return;\n        }\n\n        if (Hotkeys.isExtendLineForward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            edge: 'focus'\n          });\n          return;\n        } // COMPAT: If a void node is selected, or a zero-width text node\n        // adjacent to an inline is selected, we need to handle these\n        // hotkeys manually because browsers won't be able to skip over\n        // the void node with the zero-width space not being an empty\n        // string.\n\n\n        if (Hotkeys.isMoveBackward(nativeEvent)) {\n          event.preventDefault();\n\n          if (selection && Range.isCollapsed(selection)) {\n            Transforms.move(editor, {\n              reverse: !isRTL\n            });\n          } else {\n            Transforms.collapse(editor, {\n              edge: 'start'\n            });\n          }\n\n          return;\n        }\n\n        if (Hotkeys.isMoveForward(nativeEvent)) {\n          event.preventDefault();\n\n          if (selection && Range.isCollapsed(selection)) {\n            Transforms.move(editor, {\n              reverse: isRTL\n            });\n          } else {\n            Transforms.collapse(editor, {\n              edge: 'end'\n            });\n          }\n\n          return;\n        }\n\n        if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n          event.preventDefault();\n\n          if (selection && Range.isExpanded(selection)) {\n            Transforms.collapse(editor, {\n              edge: 'focus'\n            });\n          }\n\n          Transforms.move(editor, {\n            unit: 'word',\n            reverse: !isRTL\n          });\n          return;\n        }\n\n        if (Hotkeys.isMoveWordForward(nativeEvent)) {\n          event.preventDefault();\n\n          if (selection && Range.isExpanded(selection)) {\n            Transforms.collapse(editor, {\n              edge: 'focus'\n            });\n          }\n\n          Transforms.move(editor, {\n            unit: 'word',\n            reverse: isRTL\n          });\n          return;\n        } // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n        // fall back to guessing at the input intention for hotkeys.\n        // COMPAT: In iOS, some of these hotkeys are handled in the\n\n\n        if (!HAS_BEFORE_INPUT_SUPPORT) {\n          // We don't have a core behavior for these, but they change the\n          // DOM if we don't prevent them, so we have to.\n          if (Hotkeys.isBold(nativeEvent) || Hotkeys.isItalic(nativeEvent) || Hotkeys.isTransposeCharacter(nativeEvent)) {\n            event.preventDefault();\n            return;\n          }\n\n          if (Hotkeys.isSoftBreak(nativeEvent)) {\n            event.preventDefault();\n            Editor.insertSoftBreak(editor);\n            return;\n          }\n\n          if (Hotkeys.isSplitBlock(nativeEvent)) {\n            event.preventDefault();\n            Editor.insertBreak(editor);\n            return;\n          }\n\n          if (Hotkeys.isDeleteBackward(nativeEvent)) {\n            event.preventDefault();\n\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor);\n            }\n\n            return;\n          }\n\n          if (Hotkeys.isDeleteForward(nativeEvent)) {\n            event.preventDefault();\n\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor);\n            }\n\n            return;\n          }\n\n          if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n            event.preventDefault();\n\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor, {\n                unit: 'line'\n              });\n            }\n\n            return;\n          }\n\n          if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n            event.preventDefault();\n\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor, {\n                unit: 'line'\n              });\n            }\n\n            return;\n          }\n\n          if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n            event.preventDefault();\n\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor, {\n                unit: 'word'\n              });\n            }\n\n            return;\n          }\n\n          if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n            event.preventDefault();\n\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor, {\n                unit: 'word'\n              });\n            }\n\n            return;\n          }\n        } else {\n          if (IS_CHROME || IS_SAFARI) {\n            // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n            // an event when deleting backwards in a selected void inline node\n            if (selection && (Hotkeys.isDeleteBackward(nativeEvent) || Hotkeys.isDeleteForward(nativeEvent)) && Range.isCollapsed(selection)) {\n              var currentNode = Node.parent(editor, selection.anchor.path);\n\n              if (Element$1.isElement(currentNode) && Editor.isVoid(editor, currentNode) && Editor.isInline(editor, currentNode)) {\n                event.preventDefault();\n                Editor.deleteBackward(editor, {\n                  unit: 'block'\n                });\n                return;\n              }\n            }\n          }\n        }\n      }\n    }, [readOnly, attributes.onKeyDown]),\n    onPaste: useCallback(event => {\n      if (!readOnly && hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onPaste)) {\n        // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n        // fall back to React's `onPaste` here instead.\n        // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n        // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n        if (!HAS_BEFORE_INPUT_SUPPORT || isPlainTextOnlyPaste(event.nativeEvent)) {\n          event.preventDefault();\n          ReactEditor.insertData(editor, event.clipboardData);\n        }\n      }\n    }, [readOnly, attributes.onPaste])\n  }), /*#__PURE__*/React.createElement(Children, {\n    decorations: decorations,\n    node: editor,\n    renderElement: renderElement,\n    renderPlaceholder: renderPlaceholder,\n    renderLeaf: renderLeaf,\n    selection: editor.selection\n  }))));\n};\n/**\r\n * The default placeholder element\r\n */\n\nvar DefaultPlaceholder = _ref2 => {\n  var {\n    attributes,\n    children\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes), children);\n};\n/**\r\n * A default memoized decorate function.\r\n */\n\nvar defaultDecorate = () => [];\n/**\r\n * A default implement to scroll dom range into view.\r\n */\n\nvar defaultScrollSelectionIntoView = (editor, domRange) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (!editor.selection || editor.selection && Range.isCollapsed(editor.selection)) {\n    var leafEl = domRange.startContainer.parentElement;\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange);\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed'\n    });\n    delete leafEl.getBoundingClientRect;\n  }\n};\n/**\r\n * Check if the target is in the editor.\r\n */\n\n\nvar hasTarget = (editor, target) => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target);\n};\n/**\r\n * Check if the target is editable and in the editor.\r\n */\n\nvar hasEditableTarget = (editor, target) => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target, {\n    editable: true\n  });\n};\n/**\r\n * Check if the target is inside void and in an non-readonly editor.\r\n */\n\nvar isTargetInsideNonReadonlyVoid = (editor, target) => {\n  if (IS_READ_ONLY.get(editor)) return false;\n  var slateNode = hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target);\n  return Editor.isVoid(editor, slateNode);\n};\n/**\r\n * Check if an event is overrided by a handler.\r\n */\n\nvar isEventHandled = (event, handler) => {\n  if (!handler) {\n    return false;\n  } // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n\n\n  var shouldTreatEventAsHandled = handler(event);\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped();\n};\n/**\r\n * Check if a DOM event is overrided by a handler.\r\n */\n\nvar isDOMEventHandled = (event, handler) => {\n  if (!handler) {\n    return false;\n  } // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n\n\n  var shouldTreatEventAsHandled = handler(event);\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n\n  return event.defaultPrevented;\n};\n\n/**\r\n * Returns the number of characters that are the same at the beginning of the\r\n * String.\r\n *\r\n * @param prev  the previous text\r\n * @param next  the next text\r\n * @returns the offset of the start of the difference; null if there is no difference\r\n */\n\nfunction getDiffStart(prev, next) {\n  var length = Math.min(prev.length, next.length);\n\n  for (var i = 0; i < length; i++) {\n    if (prev.charAt(i) !== next.charAt(i)) return i;\n  }\n\n  if (prev.length !== next.length) return length;\n  return null;\n}\n/**\r\n * Returns the number of characters that are the same at the end of the String\r\n * up to `max`. Max prevents double-counting characters when there are\r\n * multiple duplicate characters around the diff area.\r\n *\r\n * @param prev  the previous text\r\n * @param next  the next text\r\n * @param max  the max length to test.\r\n * @returns number of characters that are the same at the end of the string\r\n */\n\n\nfunction getDiffEnd(prev, next, max) {\n  var prevLength = prev.length;\n  var nextLength = next.length;\n  var length = Math.min(prevLength, nextLength, max);\n\n  for (var i = 0; i < length; i++) {\n    var prevChar = prev.charAt(prevLength - i - 1);\n    var nextChar = next.charAt(nextLength - i - 1);\n    if (prevChar !== nextChar) return i;\n  }\n\n  if (prev.length !== next.length) return length;\n  return null;\n}\n/**\r\n * Takes two strings and returns an object representing two offsets. The\r\n * first, `start` represents the number of characters that are the same at\r\n * the front of the String. The `end` represents the number of characters\r\n * that are the same at the end of the String.\r\n *\r\n * Returns null if they are identical.\r\n *\r\n * @param prev  the previous text\r\n * @param next  the next text\r\n * @returns the difference text range; null if there are no differences.\r\n */\n\n\nfunction getDiffOffsets(prev, next) {\n  if (prev === next) return null;\n  var start = getDiffStart(prev, next);\n  if (start === null) return null;\n  var maxEnd = Math.min(prev.length - start, next.length - start);\n  var end = getDiffEnd(prev, next, maxEnd);\n  if (end === null) return null;\n  return {\n    start,\n    end\n  };\n}\n/**\r\n * Takes a text string and returns a slice from the string at the given text range\r\n *\r\n * @param text  the text\r\n * @param offsets  the text range\r\n * @returns the text slice at text range\r\n */\n\n\nfunction sliceText(text, offsets) {\n  return text.slice(offsets.start, text.length - offsets.end);\n}\n/**\r\n * Takes two strings and returns a smart diff that can be used to describe the\r\n * change in a way that can be used as operations like inserting, removing or\r\n * replacing text.\r\n *\r\n * @param prev the previous text\r\n * @param next the next text\r\n * @returns the text difference\r\n */\n\n\nfunction diffText(prev, next) {\n  if (prev === undefined || next === undefined) return null;\n  var offsets = getDiffOffsets(prev, next);\n  if (offsets == null) return null;\n  var insertText = sliceText(next, offsets);\n  var removeText = sliceText(prev, offsets);\n  return {\n    start: offsets.start,\n    end: prev.length - offsets.end,\n    insertText,\n    removeText\n  };\n}\nfunction combineInsertedText(insertedText) {\n  return insertedText.reduce((acc, _ref) => {\n    var {\n      text\n    } = _ref;\n    return \"\".concat(acc).concat(text.insertText);\n  }, '');\n}\nfunction getTextInsertion(editor, domNode) {\n  var node = ReactEditor.toSlateNode(editor, domNode);\n\n  if (!Text$1.isText(node)) {\n    return undefined;\n  }\n\n  var prevText = node.text;\n  var nextText = domNode.textContent; // textContent will pad an extra \\n when the textContent ends with an \\n\n\n  if (nextText.endsWith('\\n')) {\n    nextText = nextText.slice(0, nextText.length - 1);\n  } // If the text is no different, there is no diff.\n\n\n  if (nextText !== prevText) {\n    var textDiff = diffText(prevText, nextText);\n\n    if (textDiff !== null) {\n      var textPath = ReactEditor.findPath(editor, node);\n      return {\n        text: textDiff,\n        path: textPath\n      };\n    }\n  }\n\n  return undefined;\n}\nfunction normalizeTextInsertionRange(editor, range, _ref2) {\n  var {\n    path,\n    text\n  } = _ref2;\n  var insertionRange = {\n    anchor: {\n      path,\n      offset: text.start\n    },\n    focus: {\n      path,\n      offset: text.end\n    }\n  };\n\n  if (!range || !Range.isCollapsed(range)) {\n    return insertionRange;\n  }\n\n  var {\n    insertText,\n    removeText\n  } = text;\n  var isSingleCharacterInsertion = insertText.length === 1 || removeText.length === 1;\n  /**\r\n   * This code handles edge cases that arise from text diffing when the\r\n   * inserted or removed character is a single character, and the character\r\n   * right before or after the anchor is the same as the one being inserted or\r\n   * removed.\r\n   *\r\n   * Take this example: hello|o\r\n   *\r\n   * If another `o` is inserted at the selection's anchor in the example above,\r\n   * it should be inserted at the anchor, but using text diffing, we actually\r\n   * detect that the character was inserted after the second `o`:\r\n   *\r\n   * helloo[o]|\r\n   *\r\n   * Instead, in these very specific edge cases, we assume that the character\r\n   * needs to be inserted after the anchor rather than where the diff was found:\r\n   *\r\n   * hello[o]|o\r\n   */\n\n  if (isSingleCharacterInsertion && Path.equals(range.anchor.path, path)) {\n    var [_text] = Array.from(Editor.nodes(editor, {\n      at: range,\n      match: Text$1.isText\n    }));\n\n    if (_text) {\n      var [node] = _text;\n      var {\n        anchor\n      } = range;\n      var characterBeforeAnchor = node.text[anchor.offset - 1];\n      var characterAfterAnchor = node.text[anchor.offset];\n\n      if (insertText.length === 1 && insertText === characterAfterAnchor) {\n        // Assume text should be inserted at the anchor\n        return range;\n      }\n\n      if (removeText.length === 1 && removeText === characterBeforeAnchor) {\n        // Assume text should be removed right before the anchor\n        return {\n          anchor: {\n            path,\n            offset: anchor.offset - 1\n          },\n          focus: {\n            path,\n            offset: anchor.offset\n          }\n        };\n      }\n    }\n  }\n\n  return insertionRange;\n}\n\n/**\r\n * An auto-incrementing identifier for keys.\r\n */\nvar n = 0;\n/**\r\n * A class that keeps track of a key string. We use a full class here because we\r\n * want to be able to use them as keys in `WeakMap` objects.\r\n */\n\nclass Key {\n  constructor() {\n    this.id = \"\".concat(n++);\n  }\n\n}\n\nvar ReactEditor = {\n  /**\r\n   * Check if the user is currently composing inside the editor.\r\n   */\n  isComposing(editor) {\n    return !!IS_COMPOSING.get(editor);\n  },\n\n  /**\r\n   * Return the host window of the current editor.\r\n   */\n  getWindow(editor) {\n    var window = EDITOR_TO_WINDOW.get(editor);\n\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor');\n    }\n\n    return window;\n  },\n\n  /**\r\n   * Find a key for a Slate node.\r\n   */\n  findKey(editor, node) {\n    var key = NODE_TO_KEY.get(node);\n\n    if (!key) {\n      key = new Key();\n      NODE_TO_KEY.set(node, key);\n    }\n\n    return key;\n  },\n\n  /**\r\n   * Find the path of Slate node.\r\n   */\n  findPath(editor, node) {\n    var path = [];\n    var child = node;\n\n    while (true) {\n      var parent = NODE_TO_PARENT.get(child);\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path;\n        } else {\n          break;\n        }\n      }\n\n      var i = NODE_TO_INDEX.get(child);\n\n      if (i == null) {\n        break;\n      }\n\n      path.unshift(i);\n      child = parent;\n    }\n\n    throw new Error(\"Unable to find the path for Slate node: \".concat(JSON.stringify(node)));\n  },\n\n  /**\r\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\r\n   */\n  findDocumentOrShadowRoot(editor) {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = el.getRootNode();\n\n    if ((root instanceof Document || root instanceof ShadowRoot) && root.getSelection != null) {\n      return root;\n    }\n\n    return el.ownerDocument;\n  },\n\n  /**\r\n   * Check if the editor is focused.\r\n   */\n  isFocused(editor) {\n    return !!IS_FOCUSED.get(editor);\n  },\n\n  /**\r\n   * Check if the editor is in read-only mode.\r\n   */\n  isReadOnly(editor) {\n    return !!IS_READ_ONLY.get(editor);\n  },\n\n  /**\r\n   * Blur the editor.\r\n   */\n  blur(editor) {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    IS_FOCUSED.set(editor, false);\n\n    if (root.activeElement === el) {\n      el.blur();\n    }\n  },\n\n  /**\r\n   * Focus the editor.\r\n   */\n  focus(editor) {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    IS_FOCUSED.set(editor, true);\n\n    if (root.activeElement !== el) {\n      el.focus({\n        preventScroll: true\n      });\n    }\n  },\n\n  /**\r\n   * Deselect the editor.\r\n   */\n  deselect(editor) {\n    ReactEditor.toDOMNode(editor, editor);\n    var {\n      selection\n    } = editor;\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    var domSelection = root.getSelection();\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges();\n    }\n\n    if (selection) {\n      Transforms.deselect(editor);\n    }\n  },\n\n  /**\r\n   * Check if a DOM node is within the editor.\r\n   */\n  hasDOMNode(editor, target) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var {\n      editable = false\n    } = options;\n    var editorEl = ReactEditor.toDOMNode(editor, editor);\n    var targetEl; // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n\n    try {\n      targetEl = isDOMElement(target) ? target : target.parentElement;\n    } catch (err) {\n      if (!err.message.includes('Permission denied to access property \"nodeType\"')) {\n        throw err;\n      }\n    }\n\n    if (!targetEl) {\n      return false;\n    }\n\n    return targetEl.closest(\"[data-slate-editor]\") === editorEl && (!editable || targetEl.isContentEditable ? true : typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n    // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n    targetEl.closest('[contenteditable=\"false\"]') === editorEl || !!targetEl.getAttribute('data-slate-zero-width'));\n  },\n\n  /**\r\n   * Insert data from a `DataTransfer` into the editor.\r\n   */\n  insertData(editor, data) {\n    editor.insertData(data);\n  },\n\n  /**\r\n   * Insert fragment data from a `DataTransfer` into the editor.\r\n   */\n  insertFragmentData(editor, data) {\n    return editor.insertFragmentData(data);\n  },\n\n  /**\r\n   * Insert text data from a `DataTransfer` into the editor.\r\n   */\n  insertTextData(editor, data) {\n    return editor.insertTextData(data);\n  },\n\n  /**\r\n   * Sets data from the currently selected fragment on a `DataTransfer`.\r\n   */\n  setFragmentData(editor, data, originEvent) {\n    editor.setFragmentData(data, originEvent);\n  },\n\n  /**\r\n   * Find the native DOM element from a Slate node.\r\n   */\n  toDOMNode(editor, node) {\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    var domNode = Editor.isEditor(node) ? EDITOR_TO_ELEMENT.get(editor) : KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.get(ReactEditor.findKey(editor, node));\n\n    if (!domNode) {\n      throw new Error(\"Cannot resolve a DOM node from Slate node: \".concat(JSON.stringify(node)));\n    }\n\n    return domNode;\n  },\n\n  /**\r\n   * Find a native DOM selection point from a Slate point.\r\n   */\n  toDOMPoint(editor, point) {\n    var [node] = Editor.node(editor, point.path);\n    var el = ReactEditor.toDOMNode(editor, node);\n    var domPoint; // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n\n    if (Editor.void(editor, {\n      at: point\n    })) {\n      point = {\n        path: point.path,\n        offset: 0\n      };\n    } // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n\n\n    var selector = \"[data-slate-string], [data-slate-zero-width]\";\n    var texts = Array.from(el.querySelectorAll(selector));\n    var start = 0;\n\n    for (var text of texts) {\n      var domNode = text.childNodes[0];\n\n      if (domNode == null || domNode.textContent == null) {\n        continue;\n      }\n\n      var {\n        length\n      } = domNode.textContent;\n      var attr = text.getAttribute('data-slate-length');\n      var trueLength = attr == null ? length : parseInt(attr, 10);\n      var end = start + trueLength;\n\n      if (point.offset <= end) {\n        var offset = Math.min(length, Math.max(0, point.offset - start));\n        domPoint = [domNode, offset];\n        break;\n      }\n\n      start = end;\n    }\n\n    if (!domPoint) {\n      throw new Error(\"Cannot resolve a DOM point from Slate point: \".concat(JSON.stringify(point)));\n    }\n\n    return domPoint;\n  },\n\n  /**\r\n   * Find a native DOM range from a Slate `range`.\r\n   *\r\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\r\n   *\r\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\r\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\r\n   */\n  toDOMRange(editor, range) {\n    var {\n      anchor,\n      focus\n    } = range;\n    var isBackward = Range.isBackward(range);\n    var domAnchor = ReactEditor.toDOMPoint(editor, anchor);\n    var domFocus = Range.isCollapsed(range) ? domAnchor : ReactEditor.toDOMPoint(editor, focus);\n    var window = ReactEditor.getWindow(editor);\n    var domRange = window.document.createRange();\n    var [startNode, startOffset] = isBackward ? domFocus : domAnchor;\n    var [endNode, endOffset] = isBackward ? domAnchor : domFocus; // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n\n    var startEl = isDOMElement(startNode) ? startNode : startNode.parentElement;\n    var isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width');\n    var endEl = isDOMElement(endNode) ? endNode : endNode.parentElement;\n    var isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width');\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset);\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset);\n    return domRange;\n  },\n\n  /**\r\n   * Find a Slate node from a native DOM `element`.\r\n   */\n  toSlateNode(editor, domNode) {\n    var domEl = isDOMElement(domNode) ? domNode : domNode.parentElement;\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(\"[data-slate-node]\");\n    }\n\n    var node = domEl ? ELEMENT_TO_NODE.get(domEl) : null;\n\n    if (!node) {\n      throw new Error(\"Cannot resolve a Slate node from DOM node: \".concat(domEl));\n    }\n\n    return node;\n  },\n\n  /**\r\n   * Get the target range from a DOM `event`.\r\n   */\n  findEventRange(editor, event) {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent;\n    }\n\n    var {\n      clientX: x,\n      clientY: y,\n      target\n    } = event;\n\n    if (x == null || y == null) {\n      throw new Error(\"Cannot resolve a Slate range from a DOM event: \".concat(event));\n    }\n\n    var node = ReactEditor.toSlateNode(editor, event.target);\n    var path = ReactEditor.findPath(editor, node); // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n\n    if (Editor.isVoid(editor, node)) {\n      var rect = target.getBoundingClientRect();\n      var isPrev = editor.isInline(node) ? x - rect.left < rect.left + rect.width - x : y - rect.top < rect.top + rect.height - y;\n      var edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end'\n      });\n      var point = isPrev ? Editor.before(editor, edge) : Editor.after(editor, edge);\n\n      if (point) {\n        var _range = Editor.range(editor, point);\n\n        return _range;\n      }\n    } // Else resolve a range from the caret position where the drop occured.\n\n\n    var domRange;\n    var {\n      document\n    } = ReactEditor.getWindow(editor); // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y);\n    } else {\n      var position = document.caretPositionFromPoint(x, y);\n\n      if (position) {\n        domRange = document.createRange();\n        domRange.setStart(position.offsetNode, position.offset);\n        domRange.setEnd(position.offsetNode, position.offset);\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(\"Cannot resolve a Slate range from a DOM event: \".concat(event));\n    } // Resolve a Slate range from the DOM range.\n\n\n    var range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false\n    });\n    return range;\n  },\n\n  /**\r\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\r\n   */\n  toSlatePoint(editor, domPoint, options) {\n    var {\n      exactMatch,\n      suppressThrow\n    } = options;\n    var [nearestNode, nearestOffset] = exactMatch ? domPoint : normalizeDOMPoint(domPoint);\n    var parentNode = nearestNode.parentNode;\n    var textNode = null;\n    var offset = 0;\n\n    if (parentNode) {\n      var _domNode$textContent;\n\n      var editorEl = ReactEditor.toDOMNode(editor, editor);\n      var potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]'); // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n\n      var voidNode = potentialVoidNode && editorEl.contains(potentialVoidNode) ? potentialVoidNode : null;\n      var leafNode = parentNode.closest('[data-slate-leaf]');\n      var domNode = null; // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]');\n\n        if (textNode) {\n          var window = ReactEditor.getWindow(editor);\n          var range = window.document.createRange();\n          range.setStart(textNode, 0);\n          range.setEnd(nearestNode, nearestOffset);\n          var contents = range.cloneContents();\n          var removals = [...Array.prototype.slice.call(contents.querySelectorAll('[data-slate-zero-width]')), ...Array.prototype.slice.call(contents.querySelectorAll('[contenteditable=false]'))];\n          removals.forEach(el => {\n            el.parentNode.removeChild(el);\n          }); // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n\n          offset = contents.textContent.length;\n          domNode = textNode;\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent.\n        leafNode = voidNode.querySelector('[data-slate-leaf]'); // COMPAT: In read-only editors the leaf is not rendered.\n\n        if (!leafNode) {\n          offset = 1;\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]');\n          domNode = leafNode;\n          offset = domNode.textContent.length;\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent.length;\n          });\n        }\n      }\n\n      if (domNode && offset === domNode.textContent.length && (parentNode.hasAttribute('data-slate-zero-width') || IS_FIREFOX && (_domNode$textContent = domNode.textContent) !== null && _domNode$textContent !== void 0 && _domNode$textContent.endsWith('\\n\\n'))) {\n        offset--;\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null;\n      }\n\n      throw new Error(\"Cannot resolve a Slate point from DOM point: \".concat(domPoint));\n    } // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n\n\n    var slateNode = ReactEditor.toSlateNode(editor, textNode);\n    var path = ReactEditor.findPath(editor, slateNode);\n    return {\n      path,\n      offset\n    };\n  },\n\n  /**\r\n   * Find a Slate range from a DOM range or selection.\r\n   */\n  toSlateRange(editor, domRange, options) {\n    var {\n      exactMatch,\n      suppressThrow\n    } = options;\n    var el = isDOMSelection(domRange) ? domRange.anchorNode : domRange.startContainer;\n    var anchorNode;\n    var anchorOffset;\n    var focusNode;\n    var focusOffset;\n    var isCollapsed;\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode;\n        anchorOffset = domRange.anchorOffset;\n        focusNode = domRange.focusNode;\n        focusOffset = domRange.focusOffset; // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n\n        if (IS_CHROME && hasShadowRoot()) {\n          isCollapsed = domRange.anchorNode === domRange.focusNode && domRange.anchorOffset === domRange.focusOffset;\n        } else {\n          isCollapsed = domRange.isCollapsed;\n        }\n      } else {\n        anchorNode = domRange.startContainer;\n        anchorOffset = domRange.startOffset;\n        focusNode = domRange.endContainer;\n        focusOffset = domRange.endOffset;\n        isCollapsed = domRange.collapsed;\n      }\n    }\n\n    if (anchorNode == null || focusNode == null || anchorOffset == null || focusOffset == null) {\n      throw new Error(\"Cannot resolve a Slate range from DOM range: \".concat(domRange));\n    }\n\n    var anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset], {\n      exactMatch,\n      suppressThrow\n    });\n\n    if (!anchor) {\n      return null;\n    }\n\n    var focus = isCollapsed ? anchor : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n      exactMatch,\n      suppressThrow\n    });\n\n    if (!focus) {\n      return null;\n    }\n\n    var range = {\n      anchor: anchor,\n      focus: focus\n    }; // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n\n    if (Range.isExpanded(range) && Range.isForward(range) && isDOMElement(focusNode) && Editor.void(editor, {\n      at: range.focus,\n      mode: 'highest'\n    })) {\n      range = Editor.unhangRange(editor, range, {\n        voids: true\n      });\n    }\n\n    return range;\n  },\n\n  hasRange(editor, range) {\n    var {\n      anchor,\n      focus\n    } = range;\n    return Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path);\n  }\n\n};\n\nfunction gatherMutationData(editor, mutations) {\n  var addedNodes = [];\n  var removedNodes = [];\n  var insertedText = [];\n  var characterDataMutations = [];\n  mutations.forEach(mutation => {\n    switch (mutation.type) {\n      case 'childList':\n        {\n          if (mutation.addedNodes.length) {\n            mutation.addedNodes.forEach(addedNode => {\n              addedNodes.push(addedNode);\n            });\n          }\n\n          mutation.removedNodes.forEach(removedNode => {\n            removedNodes.push(removedNode);\n          });\n          break;\n        }\n\n      case 'characterData':\n        {\n          characterDataMutations.push(mutation); // Changes to text nodes should consider the parent element\n\n          var {\n            parentNode\n          } = mutation.target;\n\n          if (!parentNode) {\n            return;\n          }\n\n          var textInsertion = getTextInsertion(editor, parentNode);\n\n          if (!textInsertion) {\n            return;\n          } // If we've already detected a diff at that path, we can return early\n\n\n          if (insertedText.some(_ref => {\n            var {\n              path\n            } = _ref;\n            return Path.equals(path, textInsertion.path);\n          })) {\n            return;\n          } // Add the text diff to the array of detected text insertions that need to be reconciled\n\n\n          insertedText.push(textInsertion);\n        }\n    }\n  });\n  return {\n    addedNodes,\n    removedNodes,\n    insertedText,\n    characterDataMutations\n  };\n}\n/**\r\n * In general, when a line break occurs, there will be more `addedNodes` than `removedNodes`.\r\n *\r\n * This isn't always the case however. In some cases, there will be more `removedNodes` than\r\n * `addedNodes`.\r\n *\r\n * To account for these edge cases, the most reliable strategy to detect line break mutations\r\n * is to check whether a new block was inserted of the same type as the current block.\r\n */\n\nvar isLineBreak = (editor, _ref2) => {\n  var {\n    addedNodes\n  } = _ref2;\n  var {\n    selection\n  } = editor;\n  var parentNode = selection ? Node.parent(editor, selection.anchor.path) : null;\n  var parentDOMNode = parentNode ? ReactEditor.toDOMNode(editor, parentNode) : null;\n\n  if (!parentDOMNode) {\n    return false;\n  }\n\n  return addedNodes.some(addedNode => addedNode instanceof HTMLElement && addedNode.tagName === (parentDOMNode === null || parentDOMNode === void 0 ? void 0 : parentDOMNode.tagName));\n};\n/**\r\n * So long as we check for line break mutations before deletion mutations,\r\n * we can safely assume that a set of mutations was a deletion if there are\r\n * removed nodes.\r\n */\n\nvar isDeletion = (_, _ref3) => {\n  var {\n    removedNodes\n  } = _ref3;\n  return removedNodes.length > 0;\n};\n/**\r\n * If the selection was expanded and there are removed nodes,\r\n * the contents of the selection need to be replaced with the diff\r\n */\n\nvar isReplaceExpandedSelection = (_ref4, _ref5) => {\n  var {\n    selection\n  } = _ref4;\n  var {\n    removedNodes\n  } = _ref5;\n  return selection ? Range.isExpanded(selection) && removedNodes.length > 0 : false;\n};\n/**\r\n * Plain text insertion\r\n */\n\nvar isTextInsertion = (_, _ref6) => {\n  var {\n    insertedText\n  } = _ref6;\n  return insertedText.length > 0;\n};\n/**\r\n * Edge case. Detect mutations that remove leaf nodes and also update character data\r\n */\n\nvar isRemoveLeafNodes = (_, _ref7) => {\n  var {\n    addedNodes,\n    characterDataMutations,\n    removedNodes\n  } = _ref7;\n  return removedNodes.length > 0 && addedNodes.length === 0 && characterDataMutations.length > 0;\n};\n\n/**\r\n * Based loosely on:\r\n *\r\n * https://github.com/facebook/draft-js/blob/master/src/component/handlers/composition/DOMObserver.js\r\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\r\n *\r\n * The input manager attempts to map observed mutations on the document to a\r\n * set of operations in order to reconcile Slate's internal value with the DOM.\r\n *\r\n * Mutations are processed synchronously as they come in. Only mutations that occur\r\n * during a user input loop are processed, as other mutations can occur within the\r\n * document that were not initiated by user input.\r\n *\r\n * The mutation reconciliation process attempts to match mutations to the following\r\n * patterns:\r\n *\r\n * - Text updates\r\n * - Deletions\r\n * - Line breaks\r\n *\r\n * @param editor\r\n * @param restoreDOM\r\n */\n\n\nclass AndroidInputManager {\n  constructor(editor, restoreDOM) {\n    this.editor = editor;\n    this.restoreDOM = restoreDOM;\n    /**\r\n     * Handle MutationObserver flush\r\n     *\r\n     * @param mutations\r\n     */\n\n    this.flush = mutations => {\n\n      try {\n        this.reconcileMutations(mutations);\n      } catch (err) {\n        // eslint-disable-next-line no-console\n        console.error(err); // Failed to reconcile mutations, restore DOM to its previous state\n\n        this.restoreDOM();\n      }\n    };\n    /**\r\n     * Reconcile a batch of mutations\r\n     *\r\n     * @param mutations\r\n     */\n\n\n    this.reconcileMutations = mutations => {\n      var mutationData = gatherMutationData(this.editor, mutations);\n      var {\n        insertedText,\n        removedNodes\n      } = mutationData;\n\n      if (isReplaceExpandedSelection(this.editor, mutationData)) {\n        var text = combineInsertedText(insertedText);\n        this.replaceExpandedSelection(text);\n      } else if (isLineBreak(this.editor, mutationData)) {\n        this.insertBreak();\n      } else if (isRemoveLeafNodes(this.editor, mutationData)) {\n        this.removeLeafNodes(removedNodes);\n      } else if (isDeletion(this.editor, mutationData)) {\n        this.deleteBackward();\n      } else if (isTextInsertion(this.editor, mutationData)) {\n        this.insertText(insertedText);\n      }\n    };\n    /**\r\n     * Apply text diff\r\n     */\n\n\n    this.insertText = insertedText => {\n      var {\n        selection\n      } = this.editor; // If it is in composing or after `onCompositionend`, set `EDITOR_ON_COMPOSITION_TEXT` and return.\n      // Text will be inserted on compositionend event.\n\n      if (ReactEditor.isComposing(this.editor) || IS_ON_COMPOSITION_END.get(this.editor)) {\n        EDITOR_ON_COMPOSITION_TEXT.set(this.editor, insertedText);\n        IS_ON_COMPOSITION_END.set(this.editor, false);\n        return;\n      } // Insert the batched text diffs\n\n\n      insertedText.forEach(insertion => {\n        var text = insertion.text.insertText;\n        var at = normalizeTextInsertionRange(this.editor, selection, insertion);\n        Transforms.setSelection(this.editor, at);\n        Editor.insertText(this.editor, text);\n      });\n    };\n    /**\r\n     * Handle line breaks\r\n     */\n\n\n    this.insertBreak = () => {\n      var {\n        selection\n      } = this.editor;\n      Editor.insertBreak(this.editor);\n      this.restoreDOM();\n\n      if (selection) {\n        // Compat: Move selection to the newly inserted block if it has not moved\n        setTimeout(() => {\n          if (this.editor.selection && Range.equals(selection, this.editor.selection)) {\n            Transforms.move(this.editor);\n          }\n        }, 100);\n      }\n    };\n    /**\r\n     * Handle expanded selection being deleted or replaced by text\r\n     */\n\n\n    this.replaceExpandedSelection = text => {\n\n      Editor.deleteFragment(this.editor);\n\n      if (text.length) {\n        // Selection was replaced by text, insert the entire text diff\n        Editor.insertText(this.editor, text);\n      }\n\n      this.restoreDOM();\n    };\n    /**\r\n     * Handle `backspace` that merges blocks\r\n     */\n\n\n    this.deleteBackward = () => {\n      Editor.deleteBackward(this.editor);\n      ReactEditor.focus(this.editor);\n      this.restoreDOM();\n    };\n    /**\r\n     * Handle mutations that remove specific leaves\r\n     */\n\n\n    this.removeLeafNodes = nodes => {\n      for (var node of nodes) {\n        var slateNode = ReactEditor.toSlateNode(this.editor, node);\n\n        if (slateNode) {\n          var path = ReactEditor.findPath(this.editor, slateNode);\n          Transforms.delete(this.editor, {\n            at: path\n          });\n          this.restoreDOM();\n        }\n      }\n    };\n\n    this.editor = editor;\n    this.restoreDOM = restoreDOM;\n  }\n\n}\n\nfunction useMutationObserver(node, callback, options) {\n  var [mutationObserver] = useState(() => new MutationObserver(callback));\n  useIsomorphicLayoutEffect(() => {\n    // Disconnect mutation observer during render phase\n    mutationObserver.disconnect();\n  });\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined');\n    } // Attach mutation observer after render phase has finished\n\n\n    mutationObserver.observe(node.current, options); // Clean up after effect\n\n    return mutationObserver.disconnect.bind(mutationObserver);\n  });\n}\n\nvar MUTATION_OBSERVER_CONFIG$1 = {\n  childList: true,\n  characterData: true,\n  subtree: true\n};\n\nfunction findClosestKnowSlateNode(domNode) {\n  var _domEl;\n\n  var domEl = isDOMElement(domNode) ? domNode : domNode.parentElement;\n\n  if (domEl && !domEl.hasAttribute('data-slate-node')) {\n    domEl = domEl.closest(\"[data-slate-node]\");\n  }\n\n  var slateNode = domEl && ELEMENT_TO_NODE.get(domEl);\n\n  if (slateNode) {\n    return slateNode;\n  } // Unknown dom element with a slate-slate-node attribute => the IME\n  // most likely duplicated the node so we have to restore the parent\n\n\n  return (_domEl = domEl) !== null && _domEl !== void 0 && _domEl.parentElement ? findClosestKnowSlateNode(domEl.parentElement) : null;\n}\n\nfunction useRestoreDom(node, receivedUserInput) {\n  var editor = useSlateStatic();\n  var mutatedNodes = useRef(new Set());\n  var handleDOMMutation = useCallback(mutations => {\n    if (!receivedUserInput.current) {\n      return;\n    }\n\n    mutations.forEach(_ref => {\n      var {\n        target\n      } = _ref;\n      var slateNode = findClosestKnowSlateNode(target);\n\n      if (!slateNode) {\n        return;\n      }\n\n      return mutatedNodes.current.add(slateNode);\n    });\n  }, []);\n  useMutationObserver(node, handleDOMMutation, MUTATION_OBSERVER_CONFIG$1); // Clear mutated nodes on every render\n\n  mutatedNodes.current.clear();\n  var restore = useCallback(() => {\n    var mutated = Array.from(mutatedNodes.current.values()); // Filter out child nodes of nodes that will be restored anyway\n\n    var nodesToRestore = mutated.filter(n => !mutated.some(m => Path.isParent(ReactEditor.findPath(editor, m), ReactEditor.findPath(editor, n))));\n    nodesToRestore.forEach(n => {\n      var _NODE_TO_RESTORE_DOM$;\n\n      (_NODE_TO_RESTORE_DOM$ = NODE_TO_RESTORE_DOM.get(n)) === null || _NODE_TO_RESTORE_DOM$ === void 0 ? void 0 : _NODE_TO_RESTORE_DOM$();\n    });\n    mutatedNodes.current.clear();\n  }, []);\n  return restore;\n}\n\nfunction useTrackUserInput() {\n  var editor = useSlateStatic();\n  var receivedUserInput = useRef(false);\n  var animationFrameRef = useRef(null);\n  var onUserInput = useCallback(() => {\n    if (receivedUserInput.current === false) {\n      var window = ReactEditor.getWindow(editor);\n      receivedUserInput.current = true;\n\n      if (animationFrameRef.current) {\n        window.cancelAnimationFrame(animationFrameRef.current);\n      }\n\n      animationFrameRef.current = window.requestAnimationFrame(() => {\n        receivedUserInput.current = false;\n        animationFrameRef.current = null;\n      });\n    }\n  }, []);\n  useEffect(() => {\n    // Reset user input tracking on every render\n    if (receivedUserInput.current) {\n      receivedUserInput.current = false;\n    }\n  });\n  return {\n    receivedUserInput,\n    onUserInput\n  };\n}\n\nvar MUTATION_OBSERVER_CONFIG = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true\n};\nfunction useAndroidInputManager(node) {\n  var editor = useSlateStatic();\n  var {\n    receivedUserInput,\n    onUserInput\n  } = useTrackUserInput();\n  var restoreDom = useRestoreDom(node, receivedUserInput);\n  var inputManager = useMemo(() => new AndroidInputManager(editor, restoreDom), [restoreDom, editor]);\n  var timeoutId = useRef(null);\n  var isReconciling = useRef(false);\n  var flush = useCallback(mutations => {\n    if (!receivedUserInput.current) {\n      return;\n    }\n\n    isReconciling.current = true;\n    inputManager.flush(mutations);\n\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current);\n    }\n\n    timeoutId.current = setTimeout(() => {\n      isReconciling.current = false;\n      timeoutId.current = null;\n    }, 250);\n  }, []);\n  useMutationObserver(node, flush, MUTATION_OBSERVER_CONFIG);\n  return {\n    isReconciling,\n    onUserInput\n  };\n}\n\nvar _excluded$1 = [\"autoFocus\", \"decorate\", \"onDOMBeforeInput\", \"placeholder\", \"readOnly\", \"renderElement\", \"renderLeaf\", \"renderPlaceholder\", \"style\", \"as\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n/**\r\n * Editable.\r\n */\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\n\nvar RESOLVE_DELAY = 20;\nvar AndroidEditable = props => {\n  var {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => /*#__PURE__*/React.createElement(DefaultPlaceholder, Object.assign({}, props)),\n    style = {},\n    as: Component = 'div'\n  } = props,\n      attributes = _objectWithoutProperties(props, _excluded$1);\n\n  var editor = useSlate(); // Rerender editor when composition status changed\n\n  var [isComposing, setIsComposing] = useState(false);\n  var ref = useRef(null);\n  var inputManager = useAndroidInputManager(ref); // Update internal state on each render.\n\n  IS_READ_ONLY.set(editor, readOnly); // Keep track of some state for the event handler logic.\n\n  var state = useMemo(() => ({\n    isComposing: false,\n    isUpdatingSelection: false,\n    latestElement: null\n  }), []);\n  var contentKey = useContentKey(editor); // Whenever the editor updates...\n\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    var window;\n\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window);\n      EDITOR_TO_ELEMENT.set(editor, ref.current);\n      NODE_TO_ELEMENT.set(editor, ref.current);\n      ELEMENT_TO_NODE.set(ref.current, editor);\n    } else {\n      NODE_TO_ELEMENT.delete(editor);\n    }\n\n    try {\n      // Make sure the DOM selection state is in sync.\n      var {\n        selection\n      } = editor;\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n      var domSelection = root.getSelection();\n\n      if (state.isComposing || !domSelection || !ReactEditor.isFocused(editor)) {\n        return;\n      }\n\n      var hasDomSelection = domSelection.type !== 'None'; // If the DOM selection is properly unset, we're done.\n\n      if (!selection && !hasDomSelection) {\n        return;\n      } // verify that the dom selection is in the editor\n\n\n      var editorElement = EDITOR_TO_ELEMENT.get(editor);\n      var hasDomSelectionInEditor = false;\n\n      if (editorElement.contains(domSelection.anchorNode) && editorElement.contains(domSelection.focusNode)) {\n        hasDomSelectionInEditor = true;\n      } // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n\n\n      if (hasDomSelection && hasDomSelectionInEditor && selection) {\n        var slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n          suppressThrow: true\n        });\n\n        if (slateRange && Range.equals(slateRange, selection)) {\n          return;\n        }\n      } // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n\n\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: false\n        });\n        return;\n      } // Otherwise the DOM selection is out of sync, so update it.\n\n\n      var el = ReactEditor.toDOMNode(editor, editor);\n      state.isUpdatingSelection = true;\n      var newDomRange = selection && ReactEditor.toDOMRange(editor, selection);\n\n      if (newDomRange) {\n        if (Range.isBackward(selection)) {\n          domSelection.setBaseAndExtent(newDomRange.endContainer, newDomRange.endOffset, newDomRange.startContainer, newDomRange.startOffset);\n        } else {\n          domSelection.setBaseAndExtent(newDomRange.startContainer, newDomRange.startOffset, newDomRange.endContainer, newDomRange.endOffset);\n        }\n\n        var leafEl = newDomRange.startContainer.parentElement;\n        leafEl.getBoundingClientRect = newDomRange.getBoundingClientRect.bind(newDomRange);\n        scrollIntoView(leafEl, {\n          scrollMode: 'if-needed',\n          boundary: el\n        }); // @ts-ignore\n\n        delete leafEl.getBoundingClientRect;\n      } else {\n        domSelection.removeAllRanges();\n      }\n\n      setTimeout(() => {\n        state.isUpdatingSelection = false;\n      });\n    } catch (_unused) {\n      // Failed to update selection, likely due to reconciliation error\n      state.isUpdatingSelection = false;\n    }\n  }); // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus();\n    }\n  }, [autoFocus]); // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n\n  var onDOMSelectionChange = useCallback(throttle(() => {\n    try {\n      if (!state.isComposing && !state.isUpdatingSelection && !inputManager.isReconciling.current) {\n        var root = ReactEditor.findDocumentOrShadowRoot(editor);\n        var {\n          activeElement\n        } = root;\n        var el = ReactEditor.toDOMNode(editor, editor);\n        var domSelection = root.getSelection();\n\n        if (activeElement === el) {\n          state.latestElement = activeElement;\n          IS_FOCUSED.set(editor, true);\n        } else {\n          IS_FOCUSED.delete(editor);\n        }\n\n        if (!domSelection) {\n          return Transforms.deselect(editor);\n        }\n\n        var {\n          anchorNode,\n          focusNode\n        } = domSelection;\n        var anchorNodeSelectable = hasEditableTarget(editor, anchorNode) || isTargetInsideNonReadonlyVoid(editor, anchorNode);\n        var focusNodeSelectable = hasEditableTarget(editor, focusNode) || isTargetInsideNonReadonlyVoid(editor, focusNode);\n\n        if (anchorNodeSelectable && focusNodeSelectable) {\n          var range = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n            suppressThrow: false\n          });\n          Transforms.select(editor, range);\n        } else {\n          Transforms.deselect(editor);\n        }\n      }\n    } catch (_unused2) {// Failed to update selection, likely due to reconciliation error\n    }\n  }, 100), [readOnly]);\n  var scheduleOnDOMSelectionChange = useMemo(() => debounce(onDOMSelectionChange, 0), [onDOMSelectionChange]); // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n\n  var onDOMBeforeInput = useCallback(event => {\n    if (!readOnly && hasEditableTarget(editor, event.target) && !isDOMEventHandled(event, propsOnDOMBeforeInput)) {\n      // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n      // triggering a `beforeinput` expecting the change to be applied to the immediately before\n      // set selection.\n      scheduleOnDOMSelectionChange.flush();\n      inputManager.onUserInput();\n    }\n  }, [readOnly, propsOnDOMBeforeInput]); // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n\n  useIsomorphicLayoutEffect(() => {\n    var node = ref.current; // @ts-ignore The `beforeinput` event isn't recognized.\n\n    node === null || node === void 0 ? void 0 : node.addEventListener('beforeinput', onDOMBeforeInput); // @ts-ignore The `beforeinput` event isn't recognized.\n\n    return () => node === null || node === void 0 ? void 0 : node.removeEventListener('beforeinput', onDOMBeforeInput);\n  }, [contentKey, propsOnDOMBeforeInput]); // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n\n  useIsomorphicLayoutEffect(() => {\n    var window = ReactEditor.getWindow(editor);\n    window.document.addEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    return () => {\n      window.document.removeEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    };\n  }, [scheduleOnDOMSelectionChange]);\n  var decorations = decorate([editor, []]);\n\n  if (placeholder && editor.children.length === 1 && Array.from(Node.texts(editor)).length === 1 && Node.string(editor) === '' && !isComposing) {\n    var start = Editor.start(editor, []);\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ReadOnlyContext.Provider, {\n    value: readOnly\n  }, /*#__PURE__*/React.createElement(DecorateContext.Provider, {\n    value: decorate\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({\n    key: contentKey,\n    role: readOnly ? undefined : 'textbox'\n  }, attributes, {\n    spellCheck: attributes.spellCheck,\n    autoCorrect: attributes.autoCorrect,\n    autoCapitalize: attributes.autoCapitalize,\n    \"data-slate-editor\": true,\n    \"data-slate-node\": \"value\",\n    contentEditable: readOnly ? undefined : true,\n    suppressContentEditableWarning: true,\n    ref: ref,\n    style: _objectSpread({\n      // Allow positioning relative to the editable element.\n      position: 'relative',\n      // Prevent the default outline styles.\n      outline: 'none',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word'\n    }, style),\n    onCopy: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCopy)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'copy');\n      }\n    }, [attributes.onCopy]),\n    onCut: useCallback(event => {\n      if (!readOnly && hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCut)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'cut');\n        var {\n          selection\n        } = editor;\n\n        if (selection) {\n          if (Range.isExpanded(selection)) {\n            Editor.deleteFragment(editor);\n          } else {\n            var node = Node.parent(editor, selection.anchor.path);\n\n            if (Editor.isVoid(editor, node)) {\n              Transforms.delete(editor);\n            }\n          }\n        }\n      }\n    }, [readOnly, attributes.onCut]),\n    onFocus: useCallback(event => {\n      if (!readOnly && !state.isUpdatingSelection && hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onFocus)) {\n        var root = ReactEditor.findDocumentOrShadowRoot(editor);\n        state.latestElement = root.activeElement;\n        IS_FOCUSED.set(editor, true);\n      }\n    }, [readOnly, attributes.onFocus]),\n    onBlur: useCallback(event => {\n      if (readOnly || state.isUpdatingSelection || !hasEditableTarget(editor, event.target) || isEventHandled(event, attributes.onBlur)) {\n        return;\n      } // COMPAT: If the current `activeElement` is still the previous\n      // one, this is due to the window being blurred when the tab\n      // itself becomes unfocused, so we want to abort early to allow to\n      // editor to stay focused when the tab becomes focused again.\n\n\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n\n      if (state.latestElement === root.activeElement) {\n        return;\n      }\n\n      var {\n        relatedTarget\n      } = event;\n      var el = ReactEditor.toDOMNode(editor, editor); // COMPAT: The event should be ignored if the focus is returning\n      // to the editor from an embedded editable element (eg. an <input>\n      // element inside a void node).\n\n      if (relatedTarget === el) {\n        return;\n      } // COMPAT: The event should be ignored if the focus is moving from\n      // the editor to inside a void node's spacer element.\n\n\n      if (isDOMElement(relatedTarget) && relatedTarget.hasAttribute('data-slate-spacer')) {\n        return;\n      } // COMPAT: The event should be ignored if the focus is moving to a\n      // non- editable section of an element that isn't a void node (eg.\n      // a list item of the check list example).\n\n\n      if (relatedTarget != null && isDOMNode(relatedTarget) && ReactEditor.hasDOMNode(editor, relatedTarget)) {\n        var node = ReactEditor.toSlateNode(editor, relatedTarget);\n\n        if (Element$1.isElement(node) && !editor.isVoid(node)) {\n          return;\n        }\n      }\n\n      IS_FOCUSED.delete(editor);\n    }, [readOnly, attributes.onBlur]),\n    onClick: useCallback(event => {\n      if (!readOnly && hasTarget(editor, event.target) && !isEventHandled(event, attributes.onClick) && isDOMNode(event.target)) {\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        var path = ReactEditor.findPath(editor, node); // At this time, the Slate document may be arbitrarily different,\n        // because onClick handlers can change the document before we get here.\n        // Therefore we must check that this path actually exists,\n        // and that it still refers to the same node.\n\n        if (Editor.hasPath(editor, path)) {\n          var lookupNode = Node.get(editor, path);\n\n          if (lookupNode === node) {\n            var _start = Editor.start(editor, path);\n\n            var end = Editor.end(editor, path);\n            var startVoid = Editor.void(editor, {\n              at: _start\n            });\n            var endVoid = Editor.void(editor, {\n              at: end\n            });\n\n            if (startVoid && endVoid && Path.equals(startVoid[1], endVoid[1])) {\n              var range = Editor.range(editor, _start);\n              Transforms.select(editor, range);\n            }\n          }\n        }\n      }\n    }, [readOnly, attributes.onClick]),\n    onCompositionEnd: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCompositionEnd)) {\n        scheduleOnDOMSelectionChange.flush();\n        setTimeout(() => {\n          state.isComposing && setIsComposing(false);\n          state.isComposing = false;\n          IS_COMPOSING.set(editor, false);\n          IS_ON_COMPOSITION_END.set(editor, true);\n          var insertedText = EDITOR_ON_COMPOSITION_TEXT.get(editor) || []; // `insertedText` is set in `MutationObserver` constructor.\n          // If open phone keyboard association function, `CompositionEvent` will be triggered.\n\n          if (!insertedText.length) {\n            return;\n          }\n\n          EDITOR_ON_COMPOSITION_TEXT.set(editor, []);\n          var {\n            selection\n          } = editor;\n          insertedText.forEach(insertion => {\n            var text = insertion.text.insertText;\n            var at = normalizeTextInsertionRange(editor, selection, insertion);\n            Transforms.setSelection(editor, at);\n            Editor.insertText(editor, text);\n          });\n        }, RESOLVE_DELAY);\n      }\n    }, [attributes.onCompositionEnd]),\n    onCompositionUpdate: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCompositionUpdate)) {\n        !state.isComposing && setIsComposing(true);\n        state.isComposing = true;\n        IS_COMPOSING.set(editor, true);\n      }\n    }, [attributes.onCompositionUpdate]),\n    onCompositionStart: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCompositionStart)) {\n        !state.isComposing && setIsComposing(true);\n        state.isComposing = true;\n        IS_COMPOSING.set(editor, true);\n      }\n    }, [attributes.onCompositionStart]),\n    onPaste: useCallback(event => {\n      // this will make application/x-slate-fragment exist when onPaste attributes is passed\n      event.clipboardData = getClipboardData(event.clipboardData); // This unfortunately needs to be handled with paste events instead.\n\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onPaste) && !readOnly) {\n        event.preventDefault();\n        ReactEditor.insertData(editor, event.clipboardData);\n      }\n    }, [readOnly, attributes.onPaste])\n  }), useChildren({\n    decorations,\n    node: editor,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection: editor.selection\n  }))));\n};\n\n/**\r\n * A React context for sharing the `focused` state of the editor.\r\n */\n\nvar FocusedContext = /*#__PURE__*/createContext(false);\n/**\r\n * Get the current `focused` state of the editor.\r\n */\n\nvar useFocused = () => {\n  return useContext(FocusedContext);\n};\n\nfunction isError(error) {\n  return error instanceof Error;\n}\n/**\r\n * A React context for sharing the editor selector context in a way to control rerenders\r\n */\n\n\nvar SlateSelectorContext = /*#__PURE__*/createContext({});\n\nvar refEquality = (a, b) => a === b;\n/**\r\n * use redux style selectors to prevent rerendering on every keystroke.\r\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\r\n *\r\n * Example:\r\n * ```\r\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\r\n * ```\r\n */\n\n\nfunction useSlateSelector(selector) {\n  var equalityFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : refEquality;\n  var [, forceRender] = useReducer(s => s + 1, 0);\n  var context = useContext(SlateSelectorContext);\n\n  if (!context) {\n    throw new Error(\"The `useSlateSelector` hook must be used inside the <Slate> component's context.\");\n  }\n\n  var {\n    getSlate,\n    addEventListener\n  } = context;\n  var latestSubscriptionCallbackError = useRef();\n  var latestSelector = useRef(() => null);\n  var latestSelectedState = useRef(null);\n  var selectedState;\n\n  try {\n    if (selector !== latestSelector.current || latestSubscriptionCallbackError.current) {\n      selectedState = selector(getSlate());\n    } else {\n      selectedState = latestSelectedState.current;\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += \"\\nThe error may be correlated with this previous error:\\n\".concat(latestSubscriptionCallbackError.current.stack, \"\\n\\n\");\n    }\n\n    throw err;\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector;\n    latestSelectedState.current = selectedState;\n    latestSubscriptionCallbackError.current = undefined;\n  });\n  useIsomorphicLayoutEffect(() => {\n    function checkForUpdates() {\n      try {\n        var newSelectedState = latestSelector.current(getSlate());\n\n        if (equalityFn(newSelectedState, latestSelectedState.current)) {\n          return;\n        }\n\n        latestSelectedState.current = newSelectedState;\n      } catch (err) {\n        // we ignore all errors here, since when the component\n        // is re-rendered, the selectors are called again, and\n        // will throw again, if neither props nor store state\n        // changed\n        latestSubscriptionCallbackError.current = err;\n      }\n\n      forceRender();\n    }\n\n    var unsubscribe = addEventListener(checkForUpdates);\n    checkForUpdates();\n    return () => unsubscribe();\n  }, // don't rerender on equalityFn change since we want to be able to define it inline\n  [addEventListener, getSlate]);\n  return selectedState;\n}\n/**\r\n * Create selector context with editor updating on every editor change\r\n */\n\nfunction getSelectorContext(editor) {\n  var eventListeners = useRef([]).current;\n  var slateRef = useRef({\n    editor\n  }).current;\n  var onChange = useCallback(editor => {\n    slateRef.editor = editor;\n    eventListeners.forEach(listener => listener(editor));\n  }, []);\n  var selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: callback => {\n        eventListeners.push(callback);\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1);\n        };\n      }\n    };\n  }, [eventListeners, slateRef]);\n  return {\n    selectorContext,\n    onChange\n  };\n}\n\nvar _excluded = [\"editor\", \"children\", \"onChange\", \"value\"];\n/**\r\n * A wrapper around the provider to handle `onChange` events, because the editor\r\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\r\n */\n\nvar Slate = props => {\n  var {\n    editor,\n    children,\n    onChange,\n    value\n  } = props,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var unmountRef = useRef(false);\n  var [context, setContext] = React.useState(() => {\n    if (!Node.isNodeList(value)) {\n      throw new Error(\"[Slate] value is invalid! Expected a list of elements\" + \"but got: \".concat(JSON.stringify(value)));\n    }\n\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\"[Slate] editor is invalid! you passed:\" + \"\".concat(JSON.stringify(editor)));\n    }\n\n    editor.children = value;\n    Object.assign(editor, rest);\n    return [editor];\n  });\n  var {\n    selectorContext,\n    onChange: handleSelectorChange\n  } = getSelectorContext(editor);\n  var onContextChange = useCallback(() => {\n    if (onChange) {\n      onChange(editor.children);\n    }\n\n    setContext([editor]);\n    handleSelectorChange(editor);\n  }, [onChange]);\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange);\n  useEffect(() => {\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {});\n      unmountRef.current = true;\n    };\n  }, []);\n  var [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor));\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor));\n  });\n  useIsomorphicLayoutEffect(() => {\n    var fn = () => setIsFocused(ReactEditor.isFocused(editor));\n\n    if (IS_REACT_VERSION_17_OR_ABOVE) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn);\n      document.addEventListener('focusout', fn);\n      return () => {\n        document.removeEventListener('focusin', fn);\n        document.removeEventListener('focusout', fn);\n      };\n    } else {\n      document.addEventListener('focus', fn, true);\n      document.addEventListener('blur', fn, true);\n      return () => {\n        document.removeEventListener('focus', fn, true);\n        document.removeEventListener('blur', fn, true);\n      };\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(SlateSelectorContext.Provider, {\n    value: selectorContext\n  }, /*#__PURE__*/React.createElement(SlateContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(EditorContext.Provider, {\n    value: editor\n  }, /*#__PURE__*/React.createElement(FocusedContext.Provider, {\n    value: isFocused\n  }, children))));\n};\n\n/**\r\n * Get the current editor object from the React context.\r\n * @deprecated Use useSlateStatic instead.\r\n */\n\nvar useEditor = () => {\n  var editor = useContext(EditorContext);\n\n  if (!editor) {\n    throw new Error(\"The `useEditor` hook must be used inside the <Slate> component's context.\");\n  }\n\n  return editor;\n};\n\n/**\r\n * Utilities for single-line deletion\r\n */\n\nvar doRectsIntersect = (rect, compareRect) => {\n  var middle = (compareRect.top + compareRect.bottom) / 2;\n  return rect.top <= middle && rect.bottom >= middle;\n};\n\nvar areRangesSameLine = (editor, range1, range2) => {\n  var rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect();\n  var rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect();\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1);\n};\n/**\r\n * A helper utility that returns the end portion of a `Range`\r\n * which is located on a single line.\r\n *\r\n * @param {Editor} editor The editor object to compare against\r\n * @param {Range} parentRange The parent range to compare against\r\n * @returns {Range} A valid portion of the parentRange which is one a single line\r\n */\n\n\nvar findCurrentLineRange = (editor, parentRange) => {\n  var parentRangeBoundary = Editor.range(editor, Range.end(parentRange));\n  var positions = Array.from(Editor.positions(editor, {\n    at: parentRange\n  }));\n  var left = 0;\n  var right = positions.length;\n  var middle = Math.floor(right / 2);\n\n  if (areRangesSameLine(editor, Editor.range(editor, positions[left]), parentRangeBoundary)) {\n    return Editor.range(editor, positions[left], parentRangeBoundary);\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(editor, positions[positions.length - 1], parentRangeBoundary);\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (areRangesSameLine(editor, Editor.range(editor, positions[middle]), parentRangeBoundary)) {\n      right = middle;\n    } else {\n      left = middle;\n    }\n\n    middle = Math.floor((left + right) / 2);\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary);\n};\n\n/**\r\n * `withReact` adds React and DOM specific behaviors to the editor.\r\n *\r\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\r\n * this plugin.\r\n *\r\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\r\n */\n\nvar withReact = editor => {\n  var e = editor;\n  var {\n    apply,\n    onChange,\n    deleteBackward\n  } = e; // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap());\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit);\n    }\n\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      var parentBlockEntry = Editor.above(editor, {\n        match: n => Editor.isBlock(editor, n),\n        at: editor.selection\n      });\n\n      if (parentBlockEntry) {\n        var [, parentBlockPath] = parentBlockEntry;\n        var parentElementRange = Editor.range(editor, parentBlockPath, editor.selection.anchor);\n        var currentLineRange = findCurrentLineRange(e, parentElementRange);\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(editor, {\n            at: currentLineRange\n          });\n        }\n      }\n    }\n  }; // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n\n\n  e.apply = op => {\n    var matches = [];\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node':\n        {\n          matches.push(...getMatches(e, op.path));\n          break;\n        }\n\n      case 'set_selection':\n        {\n          var _EDITOR_TO_USER_SELEC;\n\n          // Selection was manually set, don't restore the user selection after the change.\n          (_EDITOR_TO_USER_SELEC = EDITOR_TO_USER_SELECTION.get(editor)) === null || _EDITOR_TO_USER_SELEC === void 0 ? void 0 : _EDITOR_TO_USER_SELEC.unref();\n          EDITOR_TO_USER_SELECTION.delete(editor);\n          break;\n        }\n\n      case 'insert_node':\n      case 'remove_node':\n        {\n          matches.push(...getMatches(e, Path.parent(op.path)));\n          break;\n        }\n\n      case 'merge_node':\n        {\n          var prevPath = Path.previous(op.path);\n          matches.push(...getMatches(e, prevPath));\n          break;\n        }\n\n      case 'move_node':\n        {\n          var commonPath = Path.common(Path.parent(op.path), Path.parent(op.newPath));\n          matches.push(...getMatches(e, commonPath));\n          break;\n        }\n    }\n\n    apply(op);\n\n    for (var [path, key] of matches) {\n      var [node] = Editor.node(e, path);\n      NODE_TO_KEY.set(node, key);\n    }\n  };\n\n  e.setFragmentData = data => {\n    var {\n      selection\n    } = e;\n\n    if (!selection) {\n      return;\n    }\n\n    var [start, end] = Range.edges(selection);\n    var startVoid = Editor.void(e, {\n      at: start.path\n    });\n    var endVoid = Editor.void(e, {\n      at: end.path\n    });\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return;\n    } // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n\n\n    var domRange = ReactEditor.toDOMRange(e, selection);\n    var contents = domRange.cloneContents();\n    var attach = contents.childNodes[0]; // Make sure attach is non-empty, since empty nodes will not get copied.\n\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node;\n      }\n    }); // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n\n    if (endVoid) {\n      var [voidNode] = endVoid;\n      var r = domRange.cloneRange();\n      var domNode = ReactEditor.toDOMNode(e, voidNode);\n      r.setEndAfter(domNode);\n      contents = r.cloneContents();\n    } // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n\n\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]');\n    } // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n\n\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(zw => {\n      var isNewline = zw.getAttribute('data-slate-zero-width') === 'n';\n      zw.textContent = isNewline ? '\\n' : '';\n    }); // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n\n    if (isDOMText(attach)) {\n      var span = attach.ownerDocument.createElement('span'); // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n\n      span.style.whiteSpace = 'pre';\n      span.appendChild(attach);\n      contents.appendChild(span);\n      attach = span;\n    }\n\n    var fragment = e.getFragment();\n    var string = JSON.stringify(fragment);\n    var encoded = window.btoa(encodeURIComponent(string));\n    attach.setAttribute('data-slate-fragment', encoded);\n    data.setData('application/x-slate-fragment', encoded); // Add the content to a <div> so that we can get its inner HTML.\n\n    var div = contents.ownerDocument.createElement('div');\n    div.appendChild(contents);\n    div.setAttribute('hidden', 'true');\n    contents.ownerDocument.body.appendChild(div);\n    data.setData('text/html', div.innerHTML);\n    data.setData('text/plain', getPlainText(div));\n    contents.ownerDocument.body.removeChild(div);\n    return data;\n  };\n\n  e.insertData = data => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data);\n    }\n  };\n\n  e.insertFragmentData = data => {\n    /**\r\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\r\n     */\n    var fragment = data.getData('application/x-slate-fragment') || getSlateFragmentAttribute(data);\n\n    if (fragment) {\n      var decoded = decodeURIComponent(window.atob(fragment));\n      var parsed = JSON.parse(decoded);\n      e.insertFragment(parsed);\n      return true;\n    }\n\n    return false;\n  };\n\n  e.insertTextData = data => {\n    var text = data.getData('text/plain');\n\n    if (text) {\n      var lines = text.split(/\\r\\n|\\r|\\n/);\n      var split = false;\n\n      for (var line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, {\n            always: true\n          });\n        }\n\n        e.insertText(line);\n        split = true;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      var onContextChange = EDITOR_TO_ON_CHANGE.get(e);\n\n      if (onContextChange) {\n        onContextChange();\n      }\n\n      onChange();\n    });\n  };\n\n  return e;\n};\n\nvar getMatches = (e, path) => {\n  var matches = [];\n\n  for (var [n, p] of Editor.levels(e, {\n    at: path\n  })) {\n    var key = ReactEditor.findKey(e, n);\n    matches.push([p, key]);\n  }\n\n  return matches;\n};\n\n// Components\nvar Editable = IS_ANDROID ? AndroidEditable : Editable$1;\n\nexport { AndroidEditable, Editable$1 as DefaultEditable, DefaultElement, DefaultLeaf, DefaultPlaceholder, Editable, ReactEditor, Slate, useEditor, useFocused, useReadOnly, useSelected, useSlate, useSlateSelector, useSlateStatic, withReact };\n//# sourceMappingURL=index.es.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n"],"names":["module","exports","value","String","rtl","test","ltr","RTL","LTR","n","t","arguments","length","r","Array","e","Error","map","join","Q","Object","getPrototypeOf","hasOwnProperty","call","constructor","Function","toString","Z","isArray","L","s","v","i","o","keys","nn","forEach","u","has","prototype","f","set","delete","add","X","Map","q","Set","p","l","slice","tn","writable","configurable","get","enumerable","create","d","y","clear","h","freeze","isFrozen","b","rn","j","O","g","S","U","w","m","_","P","M","x","H","A","I","k","R","a","c","D","concat","F","z","getOwnPropertyDescriptor","E","N","T","C","en","on","Proxy","revocable","revoke","proxy","J","push","from","G","W","Symbol","B","Reflect","for","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptors","deleteProperty","defineProperty","setPrototypeOf","apply","an","produce","Promise","then","produceWithPatches","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","K","finishDraft","applyPatches","path","op","$","fn","ln","bind","dn","root","__webpack_require__","getRawTag","objectToString","symToStringTag","toStringTag","undefined","trimmedEndIndex","reTrimStart","string","replace","freeGlobal","objectProto","nativeObjectToString","isOwn","tag","unmasked","result","freeSelf","self","reWhitespace","index","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","shouldInvoke","timeSinceLastCall","timeSinceLastInvoke","timerExpired","timeWaiting","trailingEdge","setTimeout","debounced","isInvoking","clearTimeout","cancel","flush","type","baseGetTag","isObjectLike","Date","debounce","baseTrim","isSymbol","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","nodeType","clientHeight","scrollHeight","clientWidth","scrollWidth","getComputedStyle","overflowY","overflowX","ownerDocument","defaultView","frameElement","index_module","window","scrollMode","block","inline","boundary","skipOverflowHiddenElements","document","scrollingElement","documentElement","parentElement","body","visualViewport","width","innerWidth","height","innerHeight","scrollX","pageXOffset","scrollY","pageYOffset","getBoundingClientRect","top","right","bottom","V","left","Y","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","offsetWidth","offsetHeight","scrollLeft","scrollTop","el","isOptionsObject","es","target","targetIsDetached","contains","behavior","computeOptions","defaultBehavior","actions","canSmoothScroll","style","_ref","scroll","_defineProperty","obj","key","_objectWithoutProperties","source","excluded","_objectWithoutPropertiesLoose","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","IS_REACT_VERSION_17_OR_ABOVE","react","version","split","IS_IOS","navigator","userAgent","MSStream","IS_APPLE","IS_ANDROID","IS_FIREFOX","IS_SAFARI","IS_EDGE_LEGACY","IS_CHROME","IS_CHROME_LEGACY","IS_FIREFOX_LEGACY","IS_QQBROWSER","IS_UC_MOBILE","IS_WECHATBROWSER","CAN_USE_DOM","createElement","HAS_BEFORE_INPUT_SUPPORT","globalThis","InputEvent","getTargetRanges","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","index_es_String","props","isLast","leaf","parent","text","editor","useSlateStatic","ReactEditor","findPath","parentPath","index_es","Path","isVoid","ZeroWidthString","Node","children","isInline","Editor","TextString","isTrailing","isLineBreak","ref","useRef","getTextContent","textWithTrailing","current","textContent","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","ELEMENT_TO_NODE","NODE_TO_ELEMENT","NODE_TO_KEY","EDITOR_TO_KEY_TO_ELEMENT","IS_READ_ONLY","IS_FOCUSED","IS_COMPOSING","IS_ON_COMPOSITION_END","EDITOR_TO_USER_SELECTION","EDITOR_ON_COMPOSITION_TEXT","EDITOR_TO_ON_CHANGE","NODE_TO_RESTORE_DOM","PLACEHOLDER_SYMBOL","Leaf","renderPlaceholder","renderLeaf","DefaultLeaf","assign","placeholderRef","placeholderEl","editorEl","querySelector","minHeight","placeholderProps","placeholder","attributes","position","pointerEvents","maxWidth","display","opacity","userSelect","textDecoration","contentEditable","Fragment","MemoizedLeaf","memo","prev","next","Text","equals","_excluded$3","_excluded2","shallowCompare","obj1","obj2","every","isDecoratorRangeListEqual","list","another","range","rangeOwnProps","otherOwnProps","Range","useContentKey","node","contentKeyRef","updateAnimationFrameRef","setForceRerenderCounter","useState","requestAnimationFrame","state","cancelAnimationFrame","decorations","leaves","findKey","id","KEY_TO_ELEMENT","contentKey","MemoizedText","Element","element","renderElement","DefaultElement","selection","readOnly","useReadOnly","useChildren","hasInlines","dir","direction_default","_text","texts","color","outline","content","MemoizedElement","Tag","EditorContext","createContext","useContext","SelectedContext","useSelected","isLeafBlock","isElement","_loop","sel","intersection","ds","reduce","acc","dec","Provider","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","deleteBackward","deleteForward","extendBackward","extendForward","italic","insertSoftBreak","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","generic","apple","windows","isGeneric","lib","TB","isApple","isWindows","event","Hotkeys","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSoftBreak","isSplitBlock","isTransposeCharacter","isUndo","ReadOnlyContext","SlateContext","useSlate","context","DecorateContext","getDefaultView","isDOMComment","isDOMNode","isDOMElement","isDOMSelection","anchorNode","Selection","isDOMText","isPlainTextOnlyPaste","clipboardData","getData","types","normalizeDOMPoint","domPoint","offset","childNodes","getEditableChildAndIndex","getEditableChild","hasShadowRoot","activeElement","shadowRoot","direction","child","triedForward","triedBackward","getAttribute","getPlainText","domNode","nodeValue","childNode","getPropertyValue","tagName","catchSlateFragment","getSlateFragmentAttribute","dataTransfer","fragment","htmlData","match","getClipboardData","DataTransfer","setData","_excluded$2","ownKeys$1","object","enumerableOnly","symbols","filter","sym","_objectSpread$1","defineProperties","Children","Editable$1","autoFocus","decorate","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","DefaultPlaceholder","scrollSelectionIntoView","defaultScrollSelectionIntoView","as","Component","isComposing","setIsComposing","deferredOperations","useMemo","hasInsertPrefixInCompositon","isDraggingInternally","isUpdatingSelection","latestElement","domSelection","findDocumentOrShadowRoot","getSelection","isFocused","hasDomSelection","editorElement","hasDomSelectionInEditor","focusNode","slateRange","toSlateRange","exactMatch","suppressThrow","hasRange","newDomRange","toDOMRange","isBackward","setBaseAndExtent","endContainer","endOffset","startContainer","startOffset","removeAllRanges","toDOMNode","focus","onDOMSelectionChange","useCallback","throttle_default","Transforms","deselect","anchorNodeSelectable","hasEditableTarget","isTargetInsideNonReadonlyVoid","focusNodeSelectable","select","scheduleOnDOMSelectionChange","debounce_default","isDOMEventHandled","inputType","data","native","isCollapsed","anchor","marks","toDOMPoint","_node$parentElement","closest","hasDOMNode","_EDITOR_TO_USER_SELEC","_lastText$textContent","getWindow","lastText","createTreeWalker","NodeFilter","SHOW_TEXT","lastChild","startsWith","targetRange","selectionRef","rangeRef","preventDefault","isExpanded","endsWith","deleteFragment","unit","insertBreak","_selection","name","insertData","insertText","toRestore","unref","addEventListener","removeEventListener","nodes","flatMap","start","role","spellCheck","autoCorrect","autoCapitalize","zindex","suppressContentEditableWarning","whiteSpace","wordWrap","onBeforeInput","isEventHandled","onInput","onBlur","relatedTarget","hasAttribute","toSlateNode","onClick","hasTarget","hasPath","detail","blockPath","isBlock","_block$","above","at","_start","end","startVoid","endVoid","_range","onCompositionEnd","leafPath","currentTextNode","withoutNormalizing","distance","reverse","onCompositionUpdate","onCompositionStart","mode","inlinePath","isEnd","point","after","setSelection","insertNodes","onCopy","setFragmentData","onCut","onDragOver","onDragStart","voids","onDrop","draggedRange","findEventRange","onDragEnd","onFocus","onKeyDown","nativeEvent","isRTL","maybeHistoryEditor","_maybeHistoryEditor","move","edge","collapse","currentNode","onPaste","_ref2","domRange","leafEl","editable","slateNode","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","defaultPrevented","sliceText","offsets","normalizeTextInsertionRange","insertionRange","removeText","isSingleCharacterInsertion","isText","characterBeforeAnchor","characterAfterAnchor","index_es_n","Key","isEditor","unshift","JSON","stringify","getRootNode","Document","ShadowRoot","isReadOnly","blur","preventScroll","rangeCount","targetEl","err","message","includes","isContentEditable","insertFragmentData","insertTextData","originEvent","querySelectorAll","attr","domAnchor","domFocus","createRange","startNode","endNode","isStartAtZeroWidth","startEl","isEndAtZeroWidth","endEl","setStart","setEnd","domEl","clientX","clientY","rect","isPrev","before","caretRangeFromPoint","caretPositionFromPoint","offsetNode","toSlatePoint","nearestNode","nearestOffset","parentNode","textNode","_domNode$textContent","potentialVoidNode","voidNode","leafNode","contents","cloneContents","removals","removeChild","anchorOffset","focusOffset","collapsed","isForward","unhangRange","addedNodes","parentDOMNode","some","addedNode","HTMLElement","isDeletion","_ref3","removedNodes","isReplaceExpandedSelection","_ref4","_ref5","isTextInsertion","_ref6","insertedText","isRemoveLeafNodes","_ref7","characterDataMutations","AndroidInputManager","restoreDOM","mutations","reconcileMutations","console","error","mutationData","mutation","removedNode","textInsertion","getTextInsertion","prevText","nextText","textDiff","diffText","getDiffOffsets","getDiffStart","maxEnd","getDiffEnd","prevLength","nextLength","prevChar","replaceExpandedSelection","removeLeafNodes","insertion","useMutationObserver","callback","mutationObserver","MutationObserver","disconnect","observe","MUTATION_OBSERVER_CONFIG$1","childList","characterData","subtree","MUTATION_OBSERVER_CONFIG","characterDataOldValue","_excluded$1","AndroidEditable","inputManager","useAndroidInputManager","receivedUserInput","animationFrameRef","onUserInput","mutatedNodes","restoreDom","findClosestKnowSlateNode","_domEl","mutated","values","nodesToRestore","isParent","_NODE_TO_RESTORE_DOM$","timeoutId","isReconciling","_unused","_unused2","_objectSpread","lookupNode","FocusedContext","useFocused","SlateSelectorContext","_excluded","Slate","eventListeners","slateRef","onChange","selectorContext","rest","unmountRef","setContext","isNodeList","handleSelectorChange","listener","getSlate","splice","onContextChange","setIsFocused","doRectsIntersect","compareRect","middle","areRangesSameLine","range1","range2","rect1","rect2","findCurrentLineRange","parentRange","parentRangeBoundary","positions","floor","withReact","parentBlockEntry","parentBlockPath","currentLineRange","matches","getMatches","previous","common","newPath","edges","attach","trim","cloneRange","setEndAfter","zw","isNewline","span","appendChild","getFragment","encoded","btoa","encodeURIComponent","setAttribute","div","innerHTML","parsed","parse","decodeURIComponent","atob","insertFragment","lines","line","splitNodes","always","react_dom","unstable_batchedUpdates","levels","Editable","IS_MAC","platform","MODIFIERS","alt","control","meta","shift","ALIASES","break","cmd","command","ctl","ctrl","del","down","esc","ins","mod","opt","option","return","space","spacebar","up","win","CODES","backspace","tab","enter","pause","capslock","escape","pageup","pagedown","home","arrowleft","arrowup","arrowright","arrowdown","insert","numlock","scrolllock","toKeyName","toLowerCase","hotkey","array","check","byKey","parseHotkey","ret","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","optional","modifier","which","toUpperCase","charCodeAt","compareHotkey","expected","actual","isPlainObject","ctor","prot"],"sourceRoot":""}